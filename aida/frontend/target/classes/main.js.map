{"version":3,"sources":["./src/app/model/people.ts","./src/app/component/advanced/settings/settings.component.ts","./src/app/component/advanced/settings/settings.component.html","./src/app/component/advanced/contact/contact.component.ts","./src/app/component/advanced/contact/contact.component.html","./src/app/component/basic/generic-table/generic-table.component.ts","./src/app/component/basic/generic-table/generic-table.component.html","./src/app/component/basic/spinner/spinner.component.html","./src/app/component/basic/spinner/spinner.component.ts","./src/app/service/loader/loader.service.ts","./src/environments/environment.ts","./src/app/model/card_layout.ts","./src/app/component/basic/footer/footer.component.ts","./src/app/component/basic/footer/footer.component.html","./src/app/component/basic/dashboard/dashboard.component.ts","./src/app/component/basic/dashboard/dashboard.component.html","./src/app/service/interceptor/loading.interceptor.ts","./src/app/component/basic/navbar/navbar.component.ts","./src/app/component/basic/navbar/navbar.component.html","./src/app/component/advanced/news/news.component.html","./src/app/component/advanced/news/news.component.ts","./src/app/service/general.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/component/advanced/publication/publication.component.html","./src/app/component/advanced/publication/publication.component.ts","./src/app/model/research.ts","./src/app/app.module.ts","./src/app/component/basic/modal-dialog/modal-dialog.component.ts","./src/app/component/basic/modal-dialog/modal-dialog.component.html","./src/app/component/advanced/about/about.component.ts","./src/app/component/advanced/about/about.component.html","./src/app/model/news.ts","./src/app/component/advanced/author/author.component.html","./src/app/component/advanced/author/author.component.ts","./src/app/app-routing.module.ts","./src/app/component/basic/generic-table/generic-table-datasource.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class People {\n    name: string;\n    surname: string;\n    role: string;\n    file: string;\n\n    constructor(name, surname, role, file) {\n        this.name = name\n        this.surname = surname\n        this.role = role\n        this.file = file\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { News } from 'src/app/model/news';\nimport { GeneralService } from 'src/app/service/general.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ModalDialogComponent } from '../../basic/modal-dialog/modal-dialog.component';\nimport { Router } from '@angular/router';\nimport { People } from 'src/app/model/people';\nimport { Research } from 'src/app/model/research';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  imageSource;\n  title;\n  description;\n  name;\n  surname;\n  year;\n  role;\n\n  selected;\n\n  showPeople: boolean = false;\n  showNews: boolean = false;\n  showResearch: boolean = false;\n\n\n  constructor(private generalService: GeneralService, public dialog: MatDialog, public router: Router) { }\n\n  async uploadListener($event: any) {\n    let files = $event.srcElement.files;\n    let img = await this.convertBase64(files[0])\n    this.imageSource = img\n  }\n\n  convertBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };\n\n  selection() {\n    if (this.selected == 'news') {\n      this.showNews = true\n      this.showPeople = false\n      this.showResearch = false\n    }\n    else if (this.selected == 'research') {\n      this.showResearch = true\n      this.showNews = false\n      this.showPeople = false\n    }\n    else if (this.selected == 'people') {\n      this.showPeople = true\n      this.showNews = false\n      this.showResearch = false\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  saveNews() {\n    let obj: News = new News(this.title, this.description, this.imageSource)\n    this.generalService.saveNews(obj).subscribe(res => {\n      this.dialog.open(ModalDialogComponent)\n      this.router.navigate(['/news']);\n    })\n  }\n\n  saveResearch() {\n    let obj: Research = new Research(this.title, this.description, this.year, this.imageSource)\n    this.generalService.saveResearch(obj).subscribe(res => {\n      this.dialog.open(ModalDialogComponent)\n      this.router.navigate(['/research']);\n    })\n  }\n\n  savePeople() {\n    let obj: People = new People(this.name, this.surname, this.role, this.imageSource)\n    this.generalService.savePeople(obj).subscribe(res => {\n      this.dialog.open(ModalDialogComponent)\n      this.router.navigate(['/people']);\n    })\n  }\n\n}\n","<div class=\"row mt-2\">\n\n    <h4>Scegli quale risorsa inserire:</h4>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Choose an option</mat-label>\n        <mat-select [(value)]=\"selected\" (selectionChange)=\"selection()\">\n            <mat-option value=\"news\">News</mat-option>\n            <mat-option value=\"people\">People</mat-option>\n            <mat-option value=\"research\">Research</mat-option>\n        </mat-select>\n    </mat-form-field>\n\n</div>\n\n<div class=\"row mt-2\" *ngIf=\"showNews\">\n\n    <h1 class=\"mat-h1 mt-2\">Inserisci una nuova news</h1>\n\n    <div>\n        <input class=\"form-control\" type=\"file\" #csvReader name=\"File\" id=\"txtFileUpload\"\n            (change)=\"uploadListener($event)\" accept=\"*\" />\n    </div>\n\n    <div *ngIf=\"imageSource\">\n        <img class=\"img\" [src]=\"imageSource\" alt=\"Image Source\">\n    </div>\n\n    <table class=\"full-width mt-2 mb-2 margin-left\" cellspacing=\"0\">\n        <tr>\n            <td>\n                <input type=\"text\" class=\"form-control mt-2\" placeholder=\"Title\" [(ngModel)]=\"title\">\n            </td>\n        </tr>\n        <tr class=\"mt-2\">\n            <td>\n                <input type=\"text-area\" class=\"form-control mt-2\" placeholder=\"Description\" [(ngModel)]=\"description\">\n            </td>\n        </tr>\n    </table>\n    <button mat-raised-button class=\"margin-left\" color=\"primary\" (click)=\"saveNews()\">Inserisci</button>\n</div>\n\n<div class=\"row mt-2\" *ngIf=\"showResearch\">\n\n    <h1 class=\"mat-h1 mt-2\">Inserisci una nuova ricerca</h1>\n\n    <div>\n        <input class=\"form-control\" type=\"file\" #csvReader name=\"File\" id=\"txtFileUpload\"\n            (change)=\"uploadListener($event)\" accept=\"*\" />\n    </div>\n\n    <div *ngIf=\"imageSource\">\n        <img class=\"img\" [src]=\"imageSource\" alt=\"Image Source\">\n    </div>\n\n    <table class=\"full-width mt-2 mb-2 margin-left\" cellspacing=\"0\">\n        <tr>\n            <td>\n                <input type=\"text\" class=\"form-control mt-2\" placeholder=\"Title\" [(ngModel)]=\"title\">\n            </td>\n        </tr>\n        <tr class=\"mt-2\">\n            <td>\n                <input type=\"text-area\" class=\"form-control mt-2\" placeholder=\"Description\" [(ngModel)]=\"description\">\n            </td>\n        </tr>\n        <tr class=\"mt-2\">\n            <td>\n                <input type=\"text-area\" class=\"form-control mt-2\" placeholder=\"Year\" [(ngModel)]=\"year\">\n            </td>\n        </tr>\n    </table>\n    <button mat-raised-button class=\"margin-left\" color=\"primary\" (click)=\"saveResearch()\">Inserisci</button>\n</div>\n\n<div class=\"row mt-2\" *ngIf=\"showPeople;\">\n\n    <h1 class=\"mat-h1 mt-2\">Inserisci un nuovo membro del team di ricerca</h1>\n\n    <div>\n        <input class=\"form-control\" type=\"file\" #csvReader name=\"File\" id=\"txtFileUpload\"\n            (change)=\"uploadListener($event)\" accept=\"*\" />\n    </div>\n\n    <div *ngIf=\"imageSource\">\n        <img class=\"img\" [src]=\"imageSource\" alt=\"Image Source\">\n    </div>\n\n    <table class=\"full-width mt-2 mb-2 margin-left\" cellspacing=\"0\">\n        <tr>\n            <td>\n                <input type=\"text\" class=\"form-control mt-2\" placeholder=\"Name\" [(ngModel)]=\"name\">\n            </td>\n        </tr>\n        <tr class=\"mt-2\">\n            <td>\n                <input type=\"text-area\" class=\"form-control mt-2\" placeholder=\"Surname\" [(ngModel)]=\"surname\">\n            </td>\n        </tr>\n        <tr class=\"mt-2\">\n            <td>\n                <input type=\"text-area\" class=\"form-control mt-2\" placeholder=\"Role\" [(ngModel)]=\"role\">\n            </td>\n        </tr>\n    </table>\n    <button mat-raised-button class=\"margin-left\" color=\"primary\" (click)=\"savePeople()\">Inserisci</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"mt-5\">\n    <mat-card-header>\n        <mat-card-title-group>\n            <mat-card-title>Contact</mat-card-title>\n        </mat-card-title-group>\n    </mat-card-header>\n    <mat-card-content>\n        Department of Electrical and Information Engineering<br>\n        Via G. Di Biasio, 43 – Cassino (FR) Italy <br>\n        e-mail: m.molinara@unicas.it, tel: 0776 2994357\n    </mat-card-content>\n</mat-card>\n\n<mat-card class=\"mt-5\">\n    <mat-card-header>\n        <mat-card-title-group>\n            <mat-card-title>Maps</mat-card-title>\n        </mat-card-title-group>\n    </mat-card-header>\n    <mat-card-content class=\"center\">\n        <iframe\n            src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2989.4944542076855!2d13.823848691465518!3d41.47187893258964!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x133abc0c18d2c96b%3A0x3adc1c25aab0a594!2sUniversit%C3%A0%20degli%20studi%20di%20Cassino%20e%20del%20Lazio%20Meridionale%20-%20Rettorato!5e0!3m2!1sit!2sit!4v1675499210198!5m2!1sit!2sit\"\n            width=\"1000\" height=\"450\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\"\n            referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\n    </mat-card-content>\n</mat-card>","import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { GenericTableDataSource, GenericTableItem } from './generic-table-datasource';\n\n@Component({\n  selector: 'app-generic-table',\n  templateUrl: './generic-table.component.html',\n  styleUrls: ['./generic-table.component.css']\n})\nexport class GenericTableComponent implements AfterViewInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatTable) table!: MatTable<GenericTableItem>;\n  dataSource: GenericTableDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  constructor() {\n    this.dataSource = new GenericTableDataSource();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data?.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 20]\">\n  </mat-paginator>\n</div>\n","<div *ngIf=\"this.loader.getLoading()\" class=\"cssload-container\">\n    <div class=\"cssload-speeding-wheel\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LoaderService } from 'src/app/service/loader/loader.service';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor(public loader: LoaderService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  private loading: boolean = false;\n\n  constructor() { }\n\n  setLoading(loading: boolean) {\n    this.loading = loading;\n  }\n\n  getLoading(): boolean {\n    return this.loading;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  base_url: 'http://localhost:8080/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class CardLayout {\n    title: string;\n    cols: string;\n    rows: string;\n    description: string;\n\n    constructor(title, cols, rows, description) {\n        this.title = title\n        this.cols = cols\n        this.rows = rows\n        this.description = description\n    }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"primary\">\n    <p class=\"text-footer\">\n        Copyright ©-All rights are reserved\n    </p>\n</footer>","import { Component } from '@angular/core';\nimport { GeneralService } from 'src/app/service/general.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { CardLayout } from 'src/app/model/card_layout';\nimport { News } from 'src/app/model/news';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n\n  cards: CardLayout[] = [];\n\n  imageSource;\n\n  constructor(private _sanitizer: DomSanitizer, private generalService: GeneralService) { }\n\n  ngOnInit(): void {\n    this.generalService.allNews().subscribe((res: News[]) => {\n      this.imageSource = this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + res[0].file)\n      res.forEach(element => {\n        let card = new CardLayout(element.title, '2', '1', element.description)\n        this.cards.push(card)\n      });\n    });\n  }\n\n}\n","<div class=\"grid-container mt-5\">\n  <h1 class=\"mat-h1\">Dashboard</h1>\n  <mat-grid-list cols=\"2\" rowHeight=\"350px\">\n    <mat-grid-tile *ngFor=\"let card of cards\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            {{card.title}}\n            <button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n              <button mat-menu-item>Expand</button>\n            </mat-menu>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <div class=\"row\">\n            <div class=\"col-sm-5\">\n              <img class=\"img\" [src]=\"imageSource\" alt=\"Image Source\">\n            </div>\n            <div class=\"col-sm-7\">\n              <p>\n                {{card.description}}\n              </p>\n            </div>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoaderService } from '../loader/loader.service';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  private totalRequests = 0;\n\n  constructor(\n    private loadingService: LoaderService\n  ) { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.totalRequests++;\n    this.loadingService.setLoading(true);\n    return next.handle(request).pipe(\n      finalize(() => {\n        this.totalRequests--;\n        if (this.totalRequests == 0) {\n          this.loadingService.setLoading(false);\n        }\n      })\n    );\n  }\n}","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-toolbar color=\"primary\">\n    <span>\n      <img class=\"img\" src=\"assets/logo_unicas.png\">\n    </span>\n    <span>\n      <img class=\"img\" src=\"assets/logo_aida.png\">\n    </span>\n    <span class=\"spacer\"></span>\n    <span class=\"cursor\" routerLink=\"/\">Home</span>\n    <span class=\"divider\"></span>\n    <span class=\"cursor\" routerLink=\"/people\">People</span>\n    <span class=\"divider\"></span>\n    <span class=\"cursor\" routerLink=\"/research\">Research</span>\n    <span class=\"divider\"></span>\n    <span class=\"cursor\" routerLink=\"/publication\">Publication</span>\n    <span class=\"divider\"></span>\n    <span class=\"cursor\" routerLink=\"/about\">About</span>\n    <span class=\"divider\"></span>\n    <span class=\"cursor\" routerLink=\"/contact\">Contact</span>\n    <button mat-button [matMenuTriggerFor]=\"menu\">\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <span class=\"divider\"></span>\n    <mat-menu #menu=\"matMenu\">\n      <li mat-menu-item routerLink=\"/settings\"> Settings</li>\n    </mat-menu>\n  </mat-toolbar>\n</mat-sidenav-container>","<div class=\"grid-container mt-5\">\n    <h1 class=\"mat-h1\">Research</h1>\n    <mat-grid-list cols=\"2\" rowHeight=\"300px\">\n        <mat-grid-tile *ngFor=\"let card of cards\" [colspan]=\"2\" [rowspan]=\"1\">\n            <mat-card class=\"aida-card\">\n                <mat-card-header>\n                    <mat-card-title>\n                        {{card.title}}\n                    </mat-card-title>\n                </mat-card-header>\n                <mat-card-content class=\"dashboard-card-content\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-5\">\n                            <img class=\"img\" [src]=\"imageSource\" alt=\"Image Source\">\n                        </div>\n                        <div class=\"col-sm-7\">\n                            <p>\n                                {{card.description}}\n                            </p>\n                        </div>\n                    </div>\n                </mat-card-content>\n            </mat-card>\n        </mat-grid-tile>\n    </mat-grid-list>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.css']\n})\nexport class NewsComponent implements OnInit {\n\n  cards = [];\n\n  imageSource;\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GeneralService {\n\n    environment: string;\n\n    constructor(private httpClient: HttpClient) {\n        this.environment = environment.base_url\n    }\n\n    allNews() {\n        return this.httpClient.get(this.environment + 'news/findAll');\n    }\n\n    getNews(id: string) {\n        return this.httpClient.get(this.environment + 'news/findById?=' + id);\n    }\n\n    allPeople() {\n        return this.httpClient.get(this.environment + 'people/findAll');\n    }\n\n    saveNews(body: any) {\n        return this.httpClient.post(this.environment + 'news/save', body);\n    }\n\n    savePeople(body: any) {\n        return this.httpClient.post(this.environment + 'people/save', body);\n    }\n\n    saveResearch(body: any) {\n        return this.httpClient.post(this.environment + 'research/save', body);\n    }\n\n    login(body: any) {\n        return this.httpClient.post(this.environment + 'login', body);\n    }\n\n}","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [HttpClient]\n})\nexport class AppComponent implements OnInit {\n\n  title = 'frontend';\n  message = '';\n  hide = true;\n\n  ngOnInit(): void {\n  }\n}\n","<app-navbar></app-navbar>\n\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>\n\n<app-spinner></app-spinner>","<div class=\"grid-container mt-5\">\n    <h1 class=\"mat-h1\">Publications</h1>\n    <mat-grid-list cols=\"2\" rowHeight=\"300px\">\n        <mat-grid-tile *ngFor=\"let card of cards\" [colspan]=\"2\" [rowspan]=\"1\">\n            <mat-card class=\"aida-card\">\n                <mat-card-header>\n                    <mat-card-title>\n                        {{card.title}}\n                    </mat-card-title>\n                </mat-card-header>\n                <mat-card-content class=\"dashboard-card-content\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-5\">\n                            <img class=\"img\" [src]=\"imageSource\" alt=\"Image Source\">\n                        </div>\n                        <div class=\"col-sm-7\">\n                            <p>\n                                {{card.description}}\n                            </p>\n                        </div>\n                    </div>\n                </mat-card-content>\n            </mat-card>\n        </mat-grid-tile>\n    </mat-grid-list>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-publication',\n  templateUrl: './publication.component.html',\n  styleUrls: ['./publication.component.css']\n})\nexport class PublicationComponent implements OnInit {\n\n  cards = [];\n\n  imageSource;\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","export class Research {\n    title: string;\n    description: string;\n    year: number;\n    file: string;\n\n    constructor(title, description, year, file) {\n        this.title = title\n        this.description = description\n        this.year = year\n        this.file = file\n    }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule, MatCard } from '@angular/material/card';\nimport { NavbarComponent } from './component/basic/navbar/navbar.component';\nimport { FooterComponent } from './component/basic/footer/footer.component';\nimport { ModalDialogComponent } from './component/basic/modal-dialog/modal-dialog.component';\nimport { AuthorComponent } from './component/advanced/author/author.component';\nimport { AboutComponent } from './component/advanced/about/about.component';\nimport { NewsComponent } from './component/advanced/news/news.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { GenericTableComponent } from './component/basic/generic-table/generic-table.component';\nimport { DashboardComponent } from './component/basic/dashboard/dashboard.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SettingsComponent } from './component/advanced/settings/settings.component';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { FormsModule } from '@angular/forms';\nimport { SpinnerComponent } from './component/basic/spinner/spinner.component';\nimport { LoadingInterceptor } from './service/interceptor/loading.interceptor';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { PublicationComponent } from './component/advanced/publication/publication.component';\nimport { ContactComponent } from './component/advanced/contact/contact.component';\nimport { MatSelectModule } from '@angular/material/select';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    FooterComponent,\n    ModalDialogComponent,\n    AuthorComponent,\n    AboutComponent,\n    NewsComponent,\n    DashboardComponent,\n    GenericTableComponent,\n    SettingsComponent,\n    SpinnerComponent,\n    PublicationComponent,\n    ContactComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatMenuModule,\n    MatButtonModule,\n    LayoutModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatSidenavModule,\n    MatListModule,\n    MatNativeDateModule,\n    FormsModule,\n    MatDialogModule,\n    MatSelectModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-modal-dialog',\n  templateUrl: './modal-dialog.component.html',\n  styleUrls: ['./modal-dialog.component.css']\n})\nexport class ModalDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 mat-dialog-title>Operazione eseguita</h1>\n<div mat-dialog-content>La risorsa è stata salvata correttamente.</div>\n<div mat-dialog-actions>\n    <button mat-button mat-dialog-close>Close</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"mt-5\">\n    <mat-card-header>\n        <mat-card-title-group>\n            <mat-card-title>Home</mat-card-title>\n        </mat-card-title-group>\n    </mat-card-header>\n    <mat-card-content>\n        Welcome to the Home Page of the Artificial Intelligence and Data Analysis Group of the DIEI, the University of\n        Cassino and Southern Lazio, Cassino, Italy.\n    </mat-card-content>\n</mat-card>\n\n<div class=\"row col-sm-12\">\n    <img class=\"img\" src=\"assets/background_aida.jpeg\">\n</div>\n\n<mat-card class=\"mt-3\">\n    <mat-card-header>\n        <mat-card-title-group>\n            <mat-card-title>Mission</mat-card-title>\n        </mat-card-title-group>\n    </mat-card-header>\n    <mat-card-content>\n        The mission of the group is to develop intelligent systems for biomedical, IoT, and Cultural\n        Heritage areas. The\n        group has more than twenty years old experience in the field of machine learning and pattern recognition and\n        data analysis.\n    </mat-card-content>\n</mat-card>\n\n<mat-card class=\"mt-3\">\n    <mat-card-header>\n        <mat-card-title-group>\n            <mat-card-title>Research field </mat-card-title>\n        </mat-card-title-group>\n    </mat-card-header>\n    <mat-card-content>\n        Pattern Recognition and Machine Learning applied to biomedical systems, distributed sensors and IoT,\n        computer-aided diagnosis for Alzheimer and Breast Cancer.\n    </mat-card-content>\n</mat-card>\n\n<mat-card class=\"mt-3\">\n    <mat-card-header>\n        <mat-card-title-group>\n            <mat-card-title>Teaching area </mat-card-title>\n        </mat-card-title-group>\n    </mat-card-header>\n    <mat-card-content>\n        Pattern Recognition and Machine Learning applied to biomedical systems, distributed sensors and IoT,\n        computer-aided diagnosis for Alzheimer and Breast Cancer.\n    </mat-card-content>\n</mat-card>\n\n<mat-card class=\"mt-3\">\n    <mat-card-header>\n        <mat-card-title-group>\n            <mat-card-title>Address</mat-card-title>\n        </mat-card-title-group>\n    </mat-card-header>\n    <mat-card-content>University of Cassino and Southern Lazio (UNICAS) Dipartimento di Ingegneria Elettrica e\n        dell’Informazione\n        (DIEI) Via G.Di Biasio 43, 03043 Cassino (FR), Italy\n    </mat-card-content>\n</mat-card>","export class News {\n    title: string;\n    description: string;\n    file: string;\n\n    constructor(title, description, file) {\n        this.title = title\n        this.description = description\n        this.file = file\n    }\n}","<div class=\"grid-container mt-5\">\n    <h1 class=\"mat-h1\">People</h1>\n    <mat-grid-list cols=\"2\" rowHeight=\"250px\">\n        <mat-grid-tile *ngFor=\"let card of cards\" [colspan]=\"1\" [rowspan]=\"1\">\n            <mat-card class=\"dashboard-card\">\n                <mat-card-header>\n                    <mat-card-title>\n                        {{card.role}}\n                    </mat-card-title>\n                </mat-card-header>\n                <mat-card-content class=\"dashboard-card-content\">\n                    <div>\n                        <img [src]=\"imageSource\" alt=\"Image Source\">\n                    </div>\n                    {{card.name}}\n                    {{card.surname}}\n                    {{card.description}}\n                </mat-card-content>\n            </mat-card>\n        </mat-grid-tile>\n    </mat-grid-list>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { GeneralService } from 'src/app/service/general.service';\n\n@Component({\n  selector: 'app-author',\n  templateUrl: './author.component.html',\n  styleUrls: ['./author.component.css']\n})\nexport class AuthorComponent implements OnInit {\n\n  cards = [];\n\n  imageSource;\n\n  constructor(private _sanitizer: DomSanitizer, private generalService: GeneralService) { }\n\n  ngOnInit(): void {\n    this.generalService.allPeople().subscribe((res: any) => {\n      this.imageSource = this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + res[0].file)\n      res.forEach(element => {\n        this.cards.push(element)\n      });\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './component/basic/dashboard/dashboard.component';\nimport { AuthorComponent } from './component/advanced/author/author.component';\nimport { NewsComponent } from './component/advanced/news/news.component';\nimport { AboutComponent } from './component/advanced/about/about.component';\nimport { SettingsComponent } from './component/advanced/settings/settings.component';\nimport { PublicationComponent } from './component/advanced/publication/publication.component';\nimport { ContactComponent } from './component/advanced/contact/contact.component';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent },\n  { path: 'research', component: NewsComponent },\n  { path: 'publication', component: PublicationComponent },\n  { path: 'people', component: AuthorComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'contact', component: ContactComponent },\n  { path: 'settings', component: SettingsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface GenericTableItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: GenericTableItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the GenericTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class GenericTableDataSource extends DataSource<GenericTableItem> {\n  data: GenericTableItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator | undefined;\n  sort: MatSort | undefined;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<GenericTableItem[]> {\n    if (this.paginator && this.sort) {\n      // Combine everything that affects the rendered data into one update\n      // stream for the data-table to consume.\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\n        .pipe(map(() => {\n          return this.getPagedData(this.getSortedData([...this.data ]));\n        }));\n    } else {\n      throw Error('Please set the paginator and sort on the data source before connecting.');\n    }\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect(): void {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: GenericTableItem[]): GenericTableItem[] {\n    if (this.paginator) {\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n      return data.splice(startIndex, this.paginator.pageSize);\n    } else {\n      return data;\n    }\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: GenericTableItem[]): GenericTableItem[] {\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort?.direction === 'asc';\n      switch (this.sort?.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
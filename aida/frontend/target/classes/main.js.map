{"version":3,"sources":["./src/app/model/people.ts","./src/app/model/card_display.ts","./src/app/model/news_lang.ts","./src/app/component/advanced/contact/contact.component.ts","./src/app/component/advanced/contact/contact.component.html","./src/app/component/advanced/private-section/edit-thesis/edit-thesis.component.ts","./src/app/component/advanced/private-section/edit-thesis/edit-thesis.component.html","./src/app/component/advanced/news/news-detail/news-detail.component.ts","./src/app/component/advanced/news/news-detail/news-detail.component.html","./src/app/component/basic/generic-table/generic-table.component.ts","./src/app/component/basic/generic-table/generic-table.component.html","./src/app/component/basic/spinner/spinner.component.html","./src/app/component/basic/spinner/spinner.component.ts","./src/app/service/loader/loader.service.ts","./src/environments/environment.ts","./src/app/component/advanced/thesis/thesis.component.ts","./src/app/component/advanced/thesis/thesis.component.html","./src/app/component/basic/footer/footer.component.ts","./src/app/component/basic/footer/footer.component.html","./src/app/component/basic/dashboard/dashboard.component.ts","./src/app/component/advanced/private-section/edit-research/edit-research.component.ts","./src/app/component/advanced/private-section/edit-research/edit-research.component.html","./src/app/service/interceptor/loading.interceptor.ts","./src/app/model/resolver/people.resolver.ts","./src/app/model/resolver/research.resolver.ts","./src/app/component/advanced/private-section/edit-people/edit-people.component.ts","./src/app/component/advanced/private-section/edit-people/edit-people.component.html","./src/app/component/advanced/p101/p101.component.ts","./src/app/component/advanced/p101/p101.component.html","./src/app/component/basic/navbar/navbar.component.ts","./src/app/component/basic/navbar/navbar.component.html","./src/app/component/advanced/private-section/insert/insert.component.ts","./src/app/component/advanced/private-section/insert/insert.component.html","./src/app/component/advanced/news/news.component.ts","./src/app/component/advanced/news/news.component.html","./src/app/model/thesis.ts","./src/app/component/advanced/research/research.component.ts","./src/app/component/advanced/research/research.component.html","./src/app/service/general.service.ts","./src/app/component/advanced/news/top-news/top-news.component.ts","./src/app/component/advanced/news/top-news/top-news.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/model/thesis_lang.ts","./src/app/component/advanced/thesis/thesis-detail/thesis-detail.component.ts","./src/app/component/advanced/thesis/thesis-detail/thesis-detail.component.html","./src/app/component/advanced/private-section/login/login.component.html","./src/app/component/advanced/private-section/login/login.component.ts","./src/app/component/advanced/publication/publication.component.html","./src/app/component/advanced/publication/publication.component.ts","./src/app/model/research.ts","./src/app/app.module.ts","./src/app/component/basic/modal-dialog/modal-dialog.component.ts","./src/app/component/basic/modal-dialog/modal-dialog.component.html","./src/environments/environment.prod.ts","./src/app/model/research_lang.ts","./src/app/component/advanced/research/research-detail/research-detail.component.ts","./src/app/component/advanced/research/research-detail/research-detail.component.html","./src/app/component/advanced/private-section/edit-news/edit-news.component.ts","./src/app/component/advanced/private-section/edit-news/edit-news.component.html","./src/app/model/research_files.ts","./src/app/component/advanced/private-section/private-section.component.ts","./src/app/component/advanced/private-section/private-section.component.html","./src/app/component/advanced/about/about.component.ts","./src/app/component/advanced/about/about.component.html","./src/app/component/basic/confirm-dialog/confirm-dialog.component.ts","./src/app/component/basic/confirm-dialog/confirm-dialog.component.html","./src/app/model/resolver/news.resolver.ts","./src/app/model/news.ts","./src/app/component/advanced/people/people-detail/people-detail.component.html","./src/app/component/advanced/people/people-detail/people-detail.component.ts","./src/app/model/resolver/thesis.resolver.ts","./src/app/app-routing.module.ts","./src/app/component/advanced/people/people.component.html","./src/app/component/advanced/people/people.component.ts","./src/app/component/basic/generic-table/generic-table-datasource.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class People {\n    idPeople: number;\n    name: string;\n    surname: string;\n    email: string;\n    number: string;\n    additionalInfo: string;\n    role: string;\n    roleGroup: string;\n    file: string;\n\n    constructor(name, surname, email, number, additionalInfo, role, group, file) {\n        this.name = name\n        this.surname = surname\n        this.email = email\n        this.number = number\n        this.additionalInfo = additionalInfo\n        this.role = role\n        this.roleGroup = group\n        this.file = file\n    }\n}","export class CardDisplay {\n    id: number;\n    title: string;\n    description: string\n    file: string;\n\n    constructor(id, title, description, file) {\n        this.id = id\n        this.title = title\n        this.description = description\n        this.file = file\n    }\n}","export class NewsLang {\n    idNewsLang: number;\n    title: string;\n    description: string;\n    language: string;\n\n    constructor(title, description, language) {\n        this.title = title\n        this.description = description\n        this.language = language\n    }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container grid-container\">\n    <mat-card class=\"mt-5\">\n        <mat-card-header>\n            <mat-card-title-group>\n                <mat-card-title class=\"title\">{{ 'contact.title' | translate }}</mat-card-title>\n            </mat-card-title-group>\n        </mat-card-header>\n        <mat-card-content>\n            Department of Electrical and Information Engineering<br>\n            Via G. Di Biasio, 43 – Cassino (FR) Italy <br>\n            e-mail: m.molinara@unicas.it, tel: 0776 2994357\n        </mat-card-content>\n    </mat-card>\n\n    <mat-card class=\"mt-5\">\n        <mat-card-header>\n            <mat-card-title-group>\n                <mat-card-title class=\"title\">Maps</mat-card-title>\n            </mat-card-title-group>\n        </mat-card-header>\n        <mat-card-content class=\"center\">\n            <iframe\n                src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2989.4944542076855!2d13.823848691465518!3d41.47187893258964!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x133abc0c18d2c96b%3A0x3adc1c25aab0a594!2sUniversit%C3%A0%20degli%20studi%20di%20Cassino%20e%20del%20Lazio%20Meridionale%20-%20Rettorato!5e0!3m2!1sit!2sit!4v1675499210198!5m2!1sit!2sit\"\n                width=\"1000\" height=\"450\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\"\n                referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\n        </mat-card-content>\n    </mat-card>\n</div>","import { Location } from '@angular/common';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalDialogComponent } from 'src/app/component/basic/modal-dialog/modal-dialog.component';\nimport { Thesis } from 'src/app/model/thesis';\nimport { ThesisLang } from 'src/app/model/thesis_lang';\nimport { GeneralService } from 'src/app/service/general.service';\n\n@Component({\n  selector: 'app-edit-thesis',\n  templateUrl: './edit-thesis.component.html',\n  styleUrls: ['./edit-thesis.component.css']\n})\nexport class EditThesisComponent implements OnInit {\n\n  imageSource;\n  state;\n  thesis;\n\n  requiredForm: FormGroup;\n\n  @ViewChild('fileInput')\n  fileInput: ElementRef;\n\n  constructor(private fb: FormBuilder, private _sanitizer: DomSanitizer, private activatedRoute: ActivatedRoute, private generalService: GeneralService, public dialog: MatDialog, public router: Router, private location: Location) {\n    this.myForm()\n  }\n\n  ngOnInit(): void {\n    this.state = this.location.getState();\n    if (!this.state.user) {\n      this.router.navigate(['/']);\n    }\n    this.activatedRoute.data.subscribe((response: any) => {\n      this.thesis = response.thesis\n      this.imageSource = this.thesis.file != null ? this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + this.thesis.file) : null\n      this.setValue()\n    });\n  }\n\n  myForm() {\n    this.requiredForm = this.fb.group({\n      titleIt: ['', Validators.required],\n      descriptionIt: ['', Validators.compose([Validators.required, Validators.maxLength(1024)])],\n      titleEn: ['', Validators.required],\n      descriptionEn: ['', Validators.compose([Validators.required, Validators.maxLength(1024)])],\n    });\n  }\n\n  setValue() {\n    let it = this.thesis.langs.filter(c => c.language == 'it')[0]\n    let en = this.thesis.langs.filter(c => c.language == 'en')[0]\n    if (it && en) {\n      this.requiredForm.patchValue({\n        titleIt: it.title, descriptionIt: it.description,\n        titleEn: en.title, descriptionEn: en.description,\n      })\n    }\n  }\n\n  async uploadListener($event: any) {\n    let files = $event.srcElement.files;\n    let img = await this.convertBase64(files[0])\n    this.imageSource = img\n  }\n\n  delete() {\n    this.fileInput.nativeElement.value = ''\n    this.imageSource = null\n  }\n\n  convertBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };\n\n  saveThesis() {\n    this.generalService.editThesis(this.thesis.idThesis, this.getThesis()).subscribe(res => {\n      this.openDialog()\n      this.router.navigate(['/private'], { state: { user: this.state } });\n    })\n  }\n\n  getThesis() {\n    let langs: ThesisLang[] = []\n    let it = new ThesisLang(this.requiredForm.value.titleIt, this.requiredForm.value.descriptionIt, 'it')\n    let en = new ThesisLang(this.requiredForm.value.titleEn, this.requiredForm.value.descriptionEn, 'en')\n    langs.push(it)\n    langs.push(en)\n    return new Thesis(this.imageSource, langs)\n  }\n\n  openDialog() {\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.height = '220px'\n    dialogConfig.width = '600px'\n\n    dialogConfig.data = {\n      title: 'Operazione completata',\n      message: 'Salvataggio effettuato correttamente.',\n      class: 'success-class'\n    };\n\n    this.dialog.open(ModalDialogComponent, dialogConfig);\n\n  }\n\n  clear() {\n    this.fileInput.nativeElement.value = ''\n    this.imageSource = null;\n    this.requiredForm.reset()\n  }\n\n  back() {\n    this.router.navigate(['/private'], { state: { user: this.state } })\n  }\n\n}\n","<div class=\"container grid-container mt-5\">\n\n    <button class=\"btn btn-primary\" (click)=\"back()\"><mat-icon>arrow_circle_left</mat-icon>\n    </button>\n\n    <div class=\"row mt-2\">\n\n        <h1 class=\"title mt-2\">{{ 'settings.edit.title' | translate}}</h1>\n\n        <form [formGroup]=\"requiredForm\" novalidate>\n\n            <div>\n                <input class=\"form-control\" type=\"file\" #fileInput name=\"File\" id=\"txtFileUpload\"\n                    (change)=\"uploadListener($event)\" accept=\"*\" />\n            </div>\n\n            <div class=\"top col-md-3 col-6 mb-4\" *ngIf=\"imageSource\">\n                <div class=\"right\">\n                    <button mat-raised-button class=\"margin-left\" color=\"warn\"\n                        (click)=\"delete()\"><mat-icon>delete</mat-icon></button>\n                </div>\n                <img class=\"card-img-top lazyloaded\" [src]=\"imageSource\" alt=\"Image Source\">\n            </div>\n\n            <div class=\"row form-group pad\">\n                <mat-form-field class=\"mt-4\" appearance=\"fill\">\n                    <mat-label>Title (IT)</mat-label>\n                    <input formControlName=\"titleIt\" matInput>\n                </mat-form-field>\n            </div>\n\n            <div *ngIf=\"requiredForm.controls['titleIt'].invalid && requiredForm.controls['titleIt'].touched\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"requiredForm.controls['titleIt'].errors.required\">\n                    Title is required.\n                </div>\n            </div>\n\n            <div class=\"row form-group pad\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Description (IT)</mat-label>\n                    <textarea formControlName=\"descriptionIt\" matInput></textarea>\n                </mat-form-field>\n                <div class=\"right\">\n                    {{requiredForm.value.descriptionIt?.length}}/1024\n                </div>\n            </div>\n\n            <div *ngIf=\"requiredForm.controls['descriptionIt'].invalid && requiredForm.controls['descriptionIt'].touched\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"requiredForm.controls['descriptionIt'].errors.required\">\n                    Description is required.\n                </div>\n                <div *ngIf=\"requiredForm.controls['descriptionIt'].hasError('maxlength')\">\n                    Description cannot exceed 1024 characters.\n                </div>\n            </div>\n\n            <div class=\"row form-group pad\">\n                <mat-form-field class=\"mt-4\" appearance=\"fill\">\n                    <mat-label>Title (EN)</mat-label>\n                    <input formControlName=\"titleEn\" matInput>\n                </mat-form-field>\n            </div>\n\n            <div *ngIf=\"requiredForm.controls['titleEn'].invalid && requiredForm.controls['titleEn'].touched\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"requiredForm.controls['titleEn'].errors.required\">\n                    Title is required.\n                </div>\n            </div>\n\n            <div class=\"row form-group pad\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Description (EN)</mat-label>\n                    <textarea formControlName=\"descriptionEn\" matInput></textarea>\n                </mat-form-field>\n                <div class=\"right\">\n                    {{requiredForm.value.descriptionEn?.length}}/1024\n                </div>\n            </div>\n\n            <div *ngIf=\"requiredForm.controls['descriptionEn'].invalid && requiredForm.controls['descriptionEn'].touched\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"requiredForm.controls['descriptionEn'].errors.required\">\n                    Description is required.\n                </div>\n                <div *ngIf=\"requiredForm.controls['descriptionEn'].hasError('maxlength')\">\n                    Description cannot exceed 1024 characters.\n                </div>\n            </div>\n\n        </form>\n\n\n        <div class=\"right mt-2\">\n            <button mat-raised-button class=\"btn btn-primary margin-left\"\n                (click)=\"saveThesis()\"><mat-icon>save</mat-icon></button>\n            <button mat-raised-button class=\"margin-left\" color=\"warn\" (click)=\"clear()\">\n                <mat-icon>clear</mat-icon></button>\n        </div>\n    </div>\n\n</div>","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport { CardDisplay } from 'src/app/model/card_display';\n\n@Component({\n  selector: 'app-news-detail',\n  templateUrl: './news-detail.component.html',\n  styleUrls: ['./news-detail.component.css']\n})\nexport class NewsDetailComponent implements OnInit {\n\n  news: CardDisplay;\n  file: SafeUrl;\n  currentLanguage;\n\n  constructor(private location: Location, private translate: TranslateService, private _sanitizer: DomSanitizer, private activatedRoute: ActivatedRoute) {\n    this.currentLanguage = this.translate.currentLang ? this.translate.currentLang : this.translate.defaultLang\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.currentLanguage = event.lang;\n    });\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe((response: any) => {\n      let languages = response.news.langs.filter(c => c.language == this.currentLanguage)[0]\n      this.file = response.news.file != null ? this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + response.news.file) : null\n      this.news = new CardDisplay(response.news.idNews, languages.title, languages.description, response.news.file)\n    });\n  }\n\n  back() {\n    this.location.back()\n  }\n\n}\n","<div class=\"container grid-container mt-5\">\n    <button class=\"btn btn-primary mt-2 ml-1\" (click)=\"back()\"><mat-icon>arrow_circle_left</mat-icon>\n    </button>\n    <div class=\"row col-sm-12\">\n        <h1 class=\"title\">{{news?.title.toUpperCase()}}</h1>\n        <div class=\"col-md-3 col-6 mb-4\">\n            <img *ngIf=\"news.file\" class=\"card-img-top lazyloaded\" [src]=\"news.file\" alt=\"Image Source\">\n            <img *ngIf=\"!news.file\" class=\"card-img-top lazyloaded\" src=\"assets/noimage.png\" alt=\"Image Source\">\n        </div>\n        <div class=\"row col-sm-12 justify mt-3\">\n            <h2> {{ 'settings.description' | translate }}</h2>\n            <p>{{news?.description}}</p>\n        </div>\n    </div>\n</div>","import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { GenericTableDataSource, GenericTableItem } from './generic-table-datasource';\n\n@Component({\n  selector: 'app-generic-table',\n  templateUrl: './generic-table.component.html',\n  styleUrls: ['./generic-table.component.css']\n})\nexport class GenericTableComponent implements AfterViewInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatTable) table!: MatTable<GenericTableItem>;\n  dataSource: GenericTableDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  constructor() {\n    this.dataSource = new GenericTableDataSource();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data?.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 20]\">\n  </mat-paginator>\n</div>\n","<div *ngIf=\"this.loader.getLoading()\" class=\"cssload-container\">\n    <div class=\"cssload-speeding-wheel\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LoaderService } from 'src/app/service/loader/loader.service';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor(public loader: LoaderService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  private loading: boolean = false;\n\n  constructor() { }\n\n  setLoading(loading: boolean) {\n    this.loading = loading;\n  }\n\n  getLoading(): boolean {\n    return this.loading;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  base_url: '/aida'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport { CardDisplay } from 'src/app/model/card_display';\nimport { GeneralService } from 'src/app/service/general.service';\n\n@Component({\n  selector: 'app-thesis',\n  templateUrl: './thesis.component.html',\n  styleUrls: ['./thesis.component.css']\n})\nexport class ThesisComponent implements OnInit {\n\n  cards = [];\n  currentLanguage = '';\n\n  constructor(private translate: TranslateService, private _sanitizer: DomSanitizer, private generalService: GeneralService, private router: Router) {\n    this.currentLanguage = this.translate.currentLang ? this.translate.currentLang : this.translate.defaultLang\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.currentLanguage = event.lang;\n    });\n  }\n\n  ngOnInit(): void {\n    this.findAll()\n  }\n\n  open(card) {\n    this.router.navigate(['/thesis/' + card.id])\n  }\n\n  findAll() {\n    this.cards = []\n    this.generalService.allThesis().subscribe((res: any) => {\n      res.forEach(element => {\n        let languages = element.langs.filter(c => c.language == this.currentLanguage)[0]\n        let description = languages.description && languages.description.length > 400 ? languages.description.slice(0, 320) + '...read more...' : languages.description\n        let file = this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + element.file)\n        let card = new CardDisplay(element.idThesis, languages.title, description, file)\n        this.cards.push(card)\n      });\n    });\n  }\n\n\n}\n","<div class=\"container grid-container mt-5\">\n    <div class=\"row\">\n        <h1 class=\"title\">{{ 'thesis.title' | translate}}</h1>\n        <p>{{ 'thesis.message' | translate}}\n        </p>\n        <div class=\"col-md-3 col-6 mb-4\" *ngFor=\"let card of cards\">\n            <div class=\"card cursor\" (click)=\"open(card)\">\n                <img *ngIf=\" card.file\" class=\"card-img-top lazyloaded\" [src]=\"card.file\" alt=\"Image Source\">\n                <img *ngIf=\"!card.file\" class=\"card-img-top lazyloaded\" src=\"assets/noimage.png\" alt=\"Image Source\">\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"primary\">\n    <p class=\"text-footer\">\n        Copyright ©-All rights are reserved\n    </p>\n</footer>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n\n\n\n}\n","import { Location } from '@angular/common';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalDialogComponent } from 'src/app/component/basic/modal-dialog/modal-dialog.component';\nimport { Research } from 'src/app/model/research';\nimport { GeneralService } from 'src/app/service/general.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ResearchFiles } from 'src/app/model/research_files';\nimport { ResearchLang } from 'src/app/model/research_lang';\n\n@Component({\n  selector: 'app-edit-research',\n  templateUrl: './edit-research.component.html',\n  styleUrls: ['./edit-research.component.css']\n})\nexport class EditResearchComponent implements OnInit {\n\n  state;\n  research: Research;\n  images: string[] = []\n  requiredForm: FormGroup;\n\n  @ViewChild('fileInput')\n  fileInput: ElementRef;\n\n  constructor(private fb: FormBuilder, private _sanitizer: DomSanitizer, private activatedRoute: ActivatedRoute, private generalService: GeneralService, public dialog: MatDialog, public router: Router, private location: Location) {\n    this.myForm()\n  }\n\n  ngOnInit(): void {\n    this.state = this.location.getState();\n    if (!this.state.user) {\n      this.router.navigate(['/']);\n    }\n    this.activatedRoute.data.subscribe((response: any) => {\n      this.research = response.research\n      this.research.files.forEach(element => {\n        this.images.push(element.file)\n      })\n      this.setValue()\n    });\n  }\n\n  myForm() {\n    this.requiredForm = this.fb.group({\n      titleIt: ['', Validators.required],\n      descriptionIt: ['', Validators.compose([Validators.required, Validators.maxLength(1024)])],\n      titleEn: ['', Validators.required],\n      descriptionEn: ['', Validators.compose([Validators.required, Validators.maxLength(1024)])],\n      year: ['']\n    });\n  }\n\n  setValue() {\n    let it = this.research.langs.filter(c => c.language == 'it')[0]\n    let en = this.research.langs.filter(c => c.language == 'en')[0]\n    if (it && en) {\n      this.requiredForm.patchValue({\n        titleIt: it.title, descriptionIt: it.description,\n        titleEn: en.title, descriptionEn: en.description,\n        year: this.research.year\n      })\n    }\n  }\n\n  onFileChange(event: any) {\n    if (event.target.files && event.target.files[0]) {\n      var filesAmount = event.target.files.length;\n      for (let i = 0; i < filesAmount; i++) {\n        var reader = new FileReader();\n\n        reader.onload = (event: any) => {\n          this.images.push(event.target.result);\n        }\n\n        reader.readAsDataURL(event.target.files[i]);\n      }\n    }\n  }\n\n  delete(image) {\n    this.fileInput.nativeElement.value = ''\n    if (image) {\n      let index = this.images.indexOf(image)\n      if (index > -1) {\n        this.images.splice(index, 1);\n      }\n    }\n  }\n\n  saveResearch() {\n    this.generalService.editResearch(this.research.idResearch, this.getResearch()).subscribe(res => {\n      this.openDialog()\n      this.router.navigate(['/private'], { state: { user: this.state } });\n    })\n  }\n\n  getResearch() {\n    let files: ResearchFiles[] = []\n    this.images.forEach(element => {\n      let file = new ResearchFiles(element)\n      files.push(file)\n    })\n    let langs: ResearchLang[] = []\n    let it = new ResearchLang(this.requiredForm.value.titleIt, this.requiredForm.value.descriptionIt, 'it')\n    let en = new ResearchLang(this.requiredForm.value.titleEn, this.requiredForm.value.descriptionEn, 'en')\n    langs.push(it)\n    langs.push(en)\n    return new Research(this.requiredForm.value.year, langs, files)\n  }\n\n  openDialog() {\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.height = '220px'\n    dialogConfig.width = '600px'\n\n    dialogConfig.data = {\n      title: 'Operazione completata',\n      message: 'Salvataggio effettuato correttamente.',\n      class: 'success-class'\n    };\n\n    this.dialog.open(ModalDialogComponent, dialogConfig);\n\n  }\n\n  clear() {\n    this.fileInput.nativeElement.value = ''\n    this.images = [];\n    this.requiredForm.reset()\n  }\n\n  back() {\n    this.router.navigate(['/private'], { state: { user: this.state } })\n  }\n\n\n}\n","<div class=\"container grid-container mt-5\">\n\n    <button class=\"btn btn-primary\" (click)=\"back()\"><mat-icon>arrow_circle_left</mat-icon>\n    </button>\n\n    <h1 class=\"title mt-2\">{{ 'settings.edit.title' | translate}}</h1>\n\n    <div class=\"row mt-2\">\n\n        <form [formGroup]=\"requiredForm\" novalidate>\n\n            <div>\n                <input id=\"file\" type=\"file\" #fileInput multiple class=\"form-control\" (change)=\"onFileChange($event)\">\n            </div>\n\n            <div class=\"top col-md-3 col-6 mb-4\" *ngFor='let url of images'>\n                <div class=\"right\">\n                    <button mat-raised-button class=\"margin-left\" color=\"warn\"\n                        (click)=\"delete(url)\"><mat-icon>delete</mat-icon></button>\n                </div>\n                <img class=\"card-img-top lazyloaded\" [src]=\"url\" alt=\"Image Source\">\n            </div>\n\n            <div class=\"row form-group pad\">\n                <mat-form-field class=\"mt-4\" appearance=\"fill\">\n                    <mat-label>Title (IT)</mat-label>\n                    <input formControlName=\"titleIt\" matInput>\n                </mat-form-field>\n            </div>\n\n            <div *ngIf=\"requiredForm.controls['titleIt'].invalid && requiredForm.controls['titleIt'].touched\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"requiredForm.controls['titleIt'].errors.required\">\n                    Title is required.\n                </div>\n            </div>\n\n            <div class=\"row form-group pad\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Description (IT)</mat-label>\n                    <textarea formControlName=\"descriptionIt\" matInput></textarea>\n                </mat-form-field>\n                <div class=\"right\">\n                    {{requiredForm.value.descriptionIt?.length}}/1024\n                </div>\n            </div>\n\n            <div *ngIf=\"requiredForm.controls['descriptionIt'].invalid && requiredForm.controls['descriptionIt'].touched\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"requiredForm.controls['descriptionIt'].errors.required\">\n                    Description is required.\n                </div>\n                <div *ngIf=\"requiredForm.controls['descriptionIt'].hasError('maxlength')\">\n                    Description cannot exceed 1024 characters.\n                </div>\n            </div>\n\n\n            <div class=\"row form-group pad\">\n                <mat-form-field class=\"mt-4\" appearance=\"fill\">\n                    <mat-label>Title (EN)</mat-label>\n                    <input formControlName=\"titleEn\" matInput>\n                </mat-form-field>\n            </div>\n\n            <div *ngIf=\"requiredForm.controls['titleEn'].invalid && requiredForm.controls['titleEn'].touched\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"requiredForm.controls['titleEn'].errors.required\">\n                    Title is required.\n                </div>\n            </div>\n\n            <div class=\"row form-group pad\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Description (EN)</mat-label>\n                    <textarea formControlName=\"descriptionEn\" matInput></textarea>\n                </mat-form-field>\n                <div class=\"right\">\n                    {{requiredForm.value.descriptionEn?.length}}/1024\n                </div>\n            </div>\n\n            <div *ngIf=\"requiredForm.controls['descriptionEn'].invalid && requiredForm.controls['descriptionEn'].touched\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"requiredForm.controls['descriptionEn'].errors.required\">\n                    Description is required.\n                </div>\n                <div *ngIf=\"requiredForm.controls['descriptionEn'].hasError('maxlength')\">\n                    Description cannot exceed 1024 characters.\n                </div>\n            </div>\n\n            <div class=\"row form-group pad\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Year</mat-label>\n                    <input formControlName=\"year\" matInput>\n                </mat-form-field>\n            </div>\n\n        </form>\n\n    </div>\n\n    <div class=\"right mt-2\">\n        <button mat-raised-button class=\"btn btn-primary margin-left\"\n            (click)=\"saveResearch()\"><mat-icon>save</mat-icon></button>\n        <button mat-raised-button class=\"margin-left\" color=\"warn\" (click)=\"clear()\">\n            <mat-icon>clear</mat-icon></button>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n  HttpHeaders\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, finalize } from 'rxjs/operators';\nimport { LoaderService } from '../loader/loader.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ModalDialogComponent } from 'src/app/component/basic/modal-dialog/modal-dialog.component';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  private totalRequests = 0;\n\n  constructor(\n    private loadingService: LoaderService, public dialog: MatDialog) { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.totalRequests++;\n    this.loadingService.setLoading(true);\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(\"admin\" + ':' + 'aidalab')\n    });\n    const clonedRequest = request.clone({ headers: headers });\n    return next.handle(clonedRequest)\n      .pipe(\n        finalize(() => {\n          this.totalRequests--;\n          if (this.totalRequests == 0) {\n            this.loadingService.setLoading(false);\n          }\n        }),\n        catchError((error: HttpErrorResponse) => {\n          let errorMsg = ''\n          if (error.status != 403) {\n            errorMsg = 'Errore durante l\\'\\operazione.';\n          } else {\n            errorMsg = 'Non sei autorizzato ad accedere alla sezione.'\n          }\n          const dialogConfig = new MatDialogConfig();\n          dialogConfig.disableClose = true;\n          dialogConfig.autoFocus = true;\n          dialogConfig.height = '220px'\n          dialogConfig.width = '600px'\n          dialogConfig.panelClass = 'full-screen-modal'\n          dialogConfig.data = {\n            title: 'Errore',\n            message: errorMsg,\n            class: 'error-class'\n          };\n          this.dialog.open(ModalDialogComponent, dialogConfig)\n          return throwError(errorMsg);\n        })\n      )\n  }\n}","import { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { GeneralService } from 'src/app/service/general.service';\n\n@Injectable({ providedIn: 'root' })\nexport class PeopleResolver implements Resolve<any>{\n\n    constructor(private service: GeneralService) { }\n\n    resolve(\n        route: ActivatedRouteSnapshot,\n    ) {\n        return this.service.getPeople(route.paramMap.get('id') || \"\");\n    }\n}","import { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { GeneralService } from 'src/app/service/general.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ResearchResolver implements Resolve<any>{\n\n    constructor(private service: GeneralService) { }\n\n    resolve(\n        route: ActivatedRouteSnapshot,\n    ) {\n        return this.service.getResearch(route.paramMap.get('id') || \"\");\n    }\n}","import { Location } from '@angular/common';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalDialogComponent } from 'src/app/component/basic/modal-dialog/modal-dialog.component';\nimport { People } from 'src/app/model/people';\nimport { GeneralService } from 'src/app/service/general.service';\n\n@Component({\n  selector: 'app-edit-people',\n  templateUrl: './edit-people.component.html',\n  styleUrls: ['./edit-people.component.css']\n})\nexport class EditPeopleComponent implements OnInit {\n\n  imageSource;\n  state: any\n  people: People;\n  edit = false;\n\n  requiredForm: FormGroup;\n\n  @ViewChild('fileInput')\n  fileInput: ElementRef;\n\n  constructor(private fb: FormBuilder, private _sanitizer: DomSanitizer, private activatedRoute: ActivatedRoute, private generalService: GeneralService, public dialog: MatDialog, public router: Router, private location: Location) {\n    this.myForm()\n  }\n\n  ngOnInit(): void {\n    this.state = this.location.getState();\n    if (!this.state.user) {\n      this.router.navigate(['/']);\n    }\n    this.activatedRoute.data.subscribe((response: any) => {\n      this.people = response.people\n      this.edit = false;\n      this.imageSource = this.people.file != null ? this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + this.people.file) : null\n      this.setValue()\n    });\n  }\n\n  myForm() {\n    this.requiredForm = this.fb.group({\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      role: ['', Validators.required],\n      group: ['', Validators.required],\n      additionalInfo: [''],\n      number: ['', Validators.required]\n    });\n  }\n\n  setValue() {\n    this.requiredForm.patchValue({ name: this.people.name, surname: this.people.surname, email: this.people.email, role: this.people.role, additionalInfo: this.people.additionalInfo, number: this.people.number, group: this.people.roleGroup })\n  }\n\n  delete() {\n    this.fileInput.nativeElement.value = ''\n    this.imageSource = null\n  }\n\n  savePeople() {\n    let obj: People = new People(this.requiredForm.value.name, this.requiredForm.value.surname, this.requiredForm.value.email, this.requiredForm.value.number, this.requiredForm.value.additionalInfo, this.requiredForm.value.role, this.requiredForm.value.group, this.edit ? this.imageSource : this.people.file)\n    this.generalService.editPeople(this.people.idPeople, obj).subscribe(res => {\n      this.openDialog()\n      this.edit = false;\n      this.router.navigate(['/private'], { state: { user: this.state } });\n    })\n  }\n\n  async uploadListener($event: any) {\n    let files = $event.srcElement.files;\n    let img = await this.convertBase64(files[0])\n    this.imageSource = img\n    this.edit = true\n  }\n\n  clear() {\n    this.fileInput.nativeElement.value = ''\n    this.imageSource = null;\n    this.requiredForm.reset()\n  }\n\n  convertBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };\n\n  openDialog() {\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.height = '220px'\n    dialogConfig.width = '600px'\n\n    dialogConfig.data = {\n      title: 'Operazione completata',\n      message: 'Salvataggio effettuato correttamente.',\n      class: 'success-class'\n    };\n\n    this.dialog.open(ModalDialogComponent, dialogConfig);\n\n  }\n\n  back() {\n    this.router.navigate(['/private'], { state: { user: this.state } })\n  }\n\n\n}\n","<div class=\"container grid-container mt-5\">\n\n    <button class=\"btn btn-primary\" (click)=\"back()\"><mat-icon>arrow_circle_left</mat-icon>\n    </button>\n\n    <h1 class=\"title mt-2\">{{ 'settings.edit.title' | translate}}</h1>\n\n    <div class=\"row mt-2\">\n\n        <form [formGroup]=\"requiredForm\" novalidate>\n\n            <div>\n                <input class=\"form-control\" type=\"file\" #fileInput name=\"File\" id=\"txtFileUpload\"\n                    (change)=\"uploadListener($event)\" accept=\"*\" />\n            </div>\n\n            <div class=\"top col-md-3 col-6 mb-4\" *ngIf=\"imageSource\">\n                <div class=\"right\">\n                    <button mat-raised-button class=\"margin-left\" color=\"warn\"\n                        (click)=\"delete()\"><mat-icon>delete</mat-icon></button>\n                </div>\n                <img class=\"card-img-top lazyloaded\" [src]=\"imageSource\" alt=\"Image Source\">\n            </div>\n\n            <div class=\"row form-group pad\">\n                <mat-form-field class=\"mt-4\" appearance=\"fill\">\n                    <mat-label>Name</mat-label>\n                    <input formControlName=\"name\" matInput>\n                </mat-form-field>\n            </div>\n\n            <div *ngIf=\"requiredForm.controls['name'].invalid && requiredForm.controls['name'].touched\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"requiredForm.controls['name'].errors.required\">\n                    Name is required.\n                </div>\n            </div>\n\n            <div class=\"row form-group pad\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Surname</mat-label>\n                    <input formControlName=\"surname\" matInput>\n                </mat-form-field>\n            </div>\n\n            <div *ngIf=\"requiredForm.controls['surname'].invalid && requiredForm.controls['surname'].touched\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"requiredForm.controls['surname'].errors.required\">\n                    Surname is required.\n                </div>\n            </div>\n\n            <div class=\"row form-group pad\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Email</mat-label>\n                    <input formControlName=\"email\" matInput>\n                </mat-form-field>\n            </div>\n\n\n            <div *ngIf=\"requiredForm.controls['email'].invalid && requiredForm.controls['email'].touched\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"requiredForm.controls['email'].errors.required\">\n                    Email is required.\n                </div>\n                <div *ngIf=\"requiredForm.controls['email'].errors.email\">\n                    Email not valid.\n                </div>\n            </div>\n\n            <div class=\"row form-group pad\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Number</mat-label>\n                    <input formControlName=\"number\" matInput>\n                </mat-form-field>\n            </div>\n\n\n            <div *ngIf=\"requiredForm.controls['number'].invalid && requiredForm.controls['number'].touched\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"requiredForm.controls['number'].errors.required\">\n                    Number is required.\n                </div>\n            </div>\n\n            <div class=\"row form-group pad\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Additional info</mat-label>\n                    <input formControlName=\"additionalInfo\" matInput>\n                </mat-form-field>\n            </div>\n\n            <div class=\"row form-group pad\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Role</mat-label>\n                    <mat-select formControlName=\"role\">\n                        <mat-option value=\"Full Professor\">Full Professor</mat-option>\n                        <mat-option value=\"Associate Professor\">Associate Professor</mat-option>\n                        <mat-option value=\"Assistant Professor\">Assistant Professor</mat-option>\n                        <mat-option value=\"Researcher\">Researcher</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n\n            <div *ngIf=\"requiredForm.controls['role'].invalid && requiredForm.controls['role'].touched\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"requiredForm.controls['role'].errors.required\">\n                    Role is required.\n                </div>\n            </div>\n\n            <div class=\"row form-group pad\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Group</mat-label>\n                    <mat-select formControlName=\"group\">\n                        <mat-option value=\"Chair\">Chair</mat-option>\n                        <mat-option value=\"Faculty\">Faculty</mat-option>\n                        <mat-option value=\"Scientific staff\">Scientific staff</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n\n            <div *ngIf=\"requiredForm.controls['group'].invalid && requiredForm.controls['group'].touched\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"requiredForm.controls['group'].errors.required\">\n                    Group is required.\n                </div>\n            </div>\n\n        </form>\n\n    </div>\n\n    <div class=\"right mt-2\">\n        <button mat-raised-button class=\"btn btn-primary margin-left\"\n            (click)=\"savePeople()\"><mat-icon>save</mat-icon></button>\n        <button mat-raised-button class=\"margin-left\" color=\"warn\" (click)=\"clear()\">\n            <mat-icon>clear</mat-icon></button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-p101',\n  templateUrl: './p101.component.html',\n  styleUrls: ['./p101.component.css']\n})\nexport class P101Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <iframe src=\"assets/web/index.html\">\n\n    </iframe>\n</div>","import { Component, ViewChild, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n\n  @ViewChild(MatSidenav)\n  sidenav!: MatSidenav;\n  isShow: boolean = false;\n  selected = 'en';\n\n  @Output() language: EventEmitter<any> = new EventEmitter();\n\n  constructor(private observer: BreakpointObserver, private cdRef: ChangeDetectorRef) { }\n\n  ngOnInit(\n  ) {\n  }\n\n  setLanguage(language: string) {\n    this.selected = language\n    this.language.emit(this.selected)\n  }\n\n  ngAfterViewChecked() {\n    this.cdRef.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    this.observer.observe(['(max-width: 1200px)']).subscribe((res) => {\n      if (res.matches) {\n        this.sidenav.mode = 'over';\n        this.sidenav.close();\n        this.isShow = false;\n      } else {\n        this.isShow = true\n      }\n    });\n  }\n}\n","<div>\n\n  <mat-toolbar class=\"background\">\n    <button mat-icon-button (click)=\"sidenav.toggle()\" *ngIf=\"!isShow\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <span>\n      <img class=\"logo\" src=\"assets/logo_aida.png\">\n      <img class=\"logo\" src=\"assets/logo_unicas.png\">\n    </span>\n    <div class=\"menu-spacer-logo\"></div>\n    <mat-icon class=\"small-icon\">language</mat-icon>\n    <button mat-button class=\"small-text\" [matMenuTriggerFor]=\"language\">{{selected?.toUpperCase()}}</button>\n    <mat-menu #language=\"matMenu\">\n      <button mat-menu-item (click)=\"setLanguage('it')\">IT</button>\n      <button mat-menu-item (click)=\"setLanguage('en')\">EN</button>\n    </mat-menu>\n    <div class=\"menu-spacer\" *ngIf=\"isShow\">\n      <span class=\"cursor\" routerLink=\"/\">Home</span>\n      <span class=\"divider\"></span>\n      <span class=\"cursor\" routerLink=\"/p101\">P101</span>\n      <span class=\"divider\"></span>\n      <span class=\"cursor\" routerLink=\"/people\">{{ 'people.title' | translate }}</span>\n      <span class=\"divider\"></span>\n      <span class=\"cursor\" routerLink=\"/research\">{{ 'research.title' | translate }}</span>\n      <span class=\"divider\"></span>\n      <span class=\"cursor\" routerLink=\"/thesis\">{{ 'thesis.title' | translate }}</span>\n      <span class=\"divider\"></span>\n      <span class=\"cursor\" routerLink=\"/publication\">{{ 'publication.title' | translate }}</span>\n      <span class=\"divider\"></span>\n      <span class=\"cursor\" routerLink=\"/about\">{{ 'about.title' | translate }}</span>\n      <span class=\"divider\"></span>\n      <span class=\"cursor\" routerLink=\"/contact\">{{ 'contact.title' | translate }}</span>\n      <span class=\"divider\"></span>\n      <span class=\"cursor\" routerLink=\"/login\">{{ 'login.title' | translate }}</span>\n    </div>\n  </mat-toolbar>\n\n  <mat-sidenav-container>\n    <mat-sidenav #sidenav=\"matSidenav\">\n      <mat-nav-list>\n        <a (click)=\"sidenav.toggle()\" class=\"small-text-href\" routerLink=\"\" mat-list-item>Home</a>\n        <a (click)=\"sidenav.toggle()\" class=\"small-text-href\" routerLink=\"/people\" mat-list-item>{{ 'people.title' |\n          translate }}</a>\n        <a (click)=\"sidenav.toggle()\" class=\"small-text-href\" routerLink=\"/p101\" mat-list-item>P101</a>\n        <a (click)=\"sidenav.toggle()\" class=\"small-text-href\" routerLink=\"/research\" mat-list-item>{{ 'research.title' |\n          translate }}</a>\n        <a (click)=\"sidenav.toggle()\" class=\"small-text-href\" routerLink=\"/thesis\" mat-list-item>{{ 'thesis.title' |\n          translate }}</a>\n        <a (click)=\"sidenav.toggle()\" class=\"small-text-href\" routerLink=\"/publication\" mat-list-item>{{\n          'publication.title' | translate }}</a>\n        <a (click)=\"sidenav.toggle()\" class=\"small-text-href\" routerLink=\"/about\" mat-list-item>{{ 'about.title' |\n          translate }}</a>\n        <a (click)=\"sidenav.toggle()\" class=\"small-text-href\" routerLink=\"/contact\" mat-list-item>{{ 'contact.title' |\n          translate }}</a>\n        <a (click)=\"sidenav.toggle()\" class=\"small-text-href\" routerLink=\"/login\" mat-list-item>{{ 'login.title' |\n          translate }}</a>\n      </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content>\n      <div>\n        <router-outlet></router-outlet>\n      </div>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n\n</div>","import { Location } from '@angular/common';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { ModalDialogComponent } from 'src/app/component/basic/modal-dialog/modal-dialog.component';\nimport { News } from 'src/app/model/news';\nimport { NewsLang } from 'src/app/model/news_lang';\nimport { People } from 'src/app/model/people';\nimport { Research } from 'src/app/model/research';\nimport { ResearchFiles } from 'src/app/model/research_files';\nimport { ResearchLang } from 'src/app/model/research_lang';\nimport { Thesis } from 'src/app/model/thesis';\nimport { ThesisLang } from 'src/app/model/thesis_lang';\nimport { GeneralService } from 'src/app/service/general.service';\n\n@Component({\n  selector: 'app-insert',\n  templateUrl: './insert.component.html',\n  styleUrls: ['./insert.component.css']\n})\nexport class InsertComponent implements OnInit {\n\n  imageSource;\n  images = [];\n\n  state: any\n\n  requiredFormNews: FormGroup;\n  requiredFormResearch: FormGroup;\n  requiredFormPeople: FormGroup;\n  requiredFormThesis: FormGroup;\n\n  @ViewChild('fileInput')\n  fileInput: ElementRef;\n\n  ngOnInit(): void {\n  }\n\n  constructor(private fb: FormBuilder, private generalService: GeneralService, public dialog: MatDialog, public router: Router, private location: Location) {\n    this.state = this.location.getState();\n    this.myForm();\n    if (!this.state.user) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  myForm() {\n    this.requiredFormNews = this.fb.group({\n      titleIt: ['', Validators.required],\n      descriptionIt: ['', Validators.compose([Validators.required, Validators.maxLength(1024)])],\n      titleEn: ['', Validators.required],\n      descriptionEn: ['', Validators.compose([Validators.required, Validators.maxLength(1024)])],\n    });\n    this.requiredFormResearch = this.fb.group({\n      titleIt: ['', Validators.required],\n      descriptionIt: ['', Validators.compose([Validators.required, Validators.maxLength(1024)])],\n      titleEn: ['', Validators.required],\n      descriptionEn: ['', Validators.compose([Validators.required, Validators.maxLength(1024)])],\n      year: ['', Validators.required]\n    });\n    this.requiredFormPeople = this.fb.group({\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      role: ['', Validators.required],\n      group: ['', Validators.required],\n      additionalInfo: [''],\n      number: ['', Validators.required]\n    });\n    this.requiredFormThesis = this.fb.group({\n      titleIt: ['', Validators.required],\n      descriptionIt: ['', Validators.compose([Validators.required, Validators.maxLength(1024)])],\n      titleEn: ['', Validators.required],\n      descriptionEn: ['', Validators.compose([Validators.required, Validators.maxLength(1024)])],\n    });\n  }\n\n  async uploadListener($event: any) {\n    let files = $event.srcElement.files;\n    let img = await this.convertBase64(files[0])\n    this.imageSource = img\n  }\n\n  clear() {\n    this.fileInput.nativeElement.value = ''\n    this.imageSource = null\n    this.images = []\n    this.requiredFormNews.reset()\n    this.requiredFormResearch.reset()\n    this.requiredFormPeople.reset()\n    this.requiredFormThesis.reset()\n  }\n\n  onFileChange(event: any) {\n    if (event.target.files && event.target.files[0]) {\n      var filesAmount = event.target.files.length;\n      for (let i = 0; i < filesAmount; i++) {\n        var reader = new FileReader();\n\n        reader.onload = (event: any) => {\n          this.images.push(event.target.result);\n        }\n\n        reader.readAsDataURL(event.target.files[i]);\n      }\n    }\n  }\n\n  delete(image) {\n    this.fileInput.nativeElement.value = ''\n    if (image) {\n      if (image) {\n        let index = this.images.indexOf(image)\n        if (index > -1) {\n          this.images.splice(index, 1);\n        }\n      }\n    } else {\n      this.imageSource = null\n    }\n  }\n\n  convertBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };\n\n  saveNews() {\n    this.generalService.saveNews(this.getNews()).subscribe(res => {\n      this.openDialog()\n      this.router.navigate(['/private'], { state: { user: res } });\n    })\n  }\n\n  getNews() {\n    let langs: NewsLang[] = []\n    let it = new NewsLang(this.requiredFormNews.value.titleIt, this.requiredFormNews.value.descriptionIt, 'it')\n    let en = new NewsLang(this.requiredFormNews.value.titleEn, this.requiredFormNews.value.descriptionEn, 'en')\n    langs.push(it)\n    langs.push(en)\n    return new News(this.imageSource, langs)\n  }\n\n  saveThesis() {\n    this.generalService.saveThesis(this.getThesis()).subscribe(res => {\n      this.openDialog()\n      this.router.navigate(['/private'], { state: { user: res } });\n    })\n  }\n\n  getThesis() {\n    let langs: ThesisLang[] = []\n    let it = new ThesisLang(this.requiredFormThesis.value.titleIt, this.requiredFormThesis.value.descriptionIt, 'it')\n    let en = new ThesisLang(this.requiredFormThesis.value.titleEn, this.requiredFormThesis.value.descriptionEn, 'en')\n    langs.push(it)\n    langs.push(en)\n    return new Thesis(this.imageSource, langs)\n  }\n\n  saveResearch() {\n    this.generalService.saveResearch(this.getResearch()).subscribe(res => {\n      this.openDialog()\n      this.router.navigate(['/private'], { state: { user: res } });\n    })\n  }\n\n  getResearch() {\n    let files: ResearchFiles[] = []\n    this.images.forEach(element => {\n      let file = new ResearchFiles(element)\n      files.push(file)\n    })\n    let langs: ResearchLang[] = []\n    let it = new ResearchLang(this.requiredFormResearch.value.titleIt, this.requiredFormResearch.value.descriptionIt, 'it')\n    let en = new ResearchLang(this.requiredFormResearch.value.titleEn, this.requiredFormResearch.value.descriptionEn, 'en')\n    langs.push(it)\n    langs.push(en)\n    return new Research(this.requiredFormResearch.value.year, langs, files)\n  }\n\n  savePeople() {\n    let obj: People = new People(this.requiredFormPeople.value.name, this.requiredFormPeople.value.surname, this.requiredFormPeople.value.email, this.requiredFormPeople.value.number, this.requiredFormPeople.value.additionalInfo, this.requiredFormPeople.value.role, this.requiredFormPeople.value.group, this.imageSource)\n    this.generalService.savePeople(obj).subscribe(res => {\n      this.openDialog()\n      this.router.navigate(['/private'], { state: { user: res } });\n    })\n  }\n\n\n  openDialog() {\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.height = '220px'\n    dialogConfig.width = '600px'\n\n    dialogConfig.data = {\n      title: 'Operazione completata',\n      message: 'Salvataggio effettuato correttamente.',\n      class: 'success-class'\n    };\n\n    this.dialog.open(ModalDialogComponent, dialogConfig);\n\n  }\n\n  back() {\n    this.router.navigate(['/private'], { state: { user: this.state } })\n  }\n\n\n}\n","<div class=\"container grid-container mt-5\">\n\n    <button class=\"btn btn-primary\" (click)=\"back()\"><mat-icon>arrow_circle_left</mat-icon>\n    </button>\n\n    <mat-tab-group>\n        <mat-tab label=\"News\">\n            <div class=\"row col-sm-12 mt-2\">\n\n                <h1 class=\"title mt-2\">{{ 'settings.news.title' | translate}}</h1>\n\n                <form [formGroup]=\"requiredFormNews\" novalidate>\n\n                    <div>\n                        <input class=\"form-control\" type=\"file\" #fileInput name=\"File\" id=\"txtFileUpload\"\n                            (change)=\"uploadListener($event)\" accept=\"*\" />\n                    </div>\n\n                    <div class=\"top col-md-3 col-6 mb-4\" *ngIf=\"imageSource\">\n                        <div class=\"right\">\n                            <button mat-raised-button class=\"margin-left\" color=\"warn\"\n                                (click)=\"delete()\"><mat-icon>delete</mat-icon></button>\n                        </div>\n                        <img class=\"card-img-top lazyloaded\" [src]=\"imageSource\" alt=\"Image Source\">\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field class=\"mt-4\" appearance=\"fill\">\n                            <mat-label>Title (IT)</mat-label>\n                            <input formControlName=\"titleIt\" matInput>\n                        </mat-form-field>\n                    </div>\n\n                    <div *ngIf=\"requiredFormNews.controls['titleIt'].invalid && requiredFormNews.controls['titleIt'].touched\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"requiredFormNews.controls['titleIt'].errors.required\">\n                            Title is required.\n                        </div>\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Description (IT)</mat-label>\n                            <textarea formControlName=\"descriptionIt\" matInput></textarea>\n                        </mat-form-field>\n                        <div class=\"right\">\n                            {{requiredFormNews.value.descriptionIt?.length}}/1024\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"requiredFormNews.controls['descriptionIt'].invalid && requiredFormNews.controls['descriptionIt'].touched\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"requiredFormNews.controls['descriptionIt'].errors.required\">\n                            Description is required.\n                        </div>\n                        <div *ngIf=\"requiredFormNews.controls['descriptionIt'].hasError('maxlength')\">\n                            Description cannot exceed 1024 characters.\n                        </div>\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field class=\"mt-4\" appearance=\"fill\">\n                            <mat-label>Title (EN)</mat-label>\n                            <input formControlName=\"titleEn\" matInput>\n                        </mat-form-field>\n                    </div>\n\n                    <div *ngIf=\"requiredFormNews.controls['titleEn'].invalid && requiredFormNews.controls['titleEn'].touched\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"requiredFormNews.controls['titleEn'].errors.required\">\n                            Title is required.\n                        </div>\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Description (EN)</mat-label>\n                            <textarea formControlName=\"descriptionEn\" matInput></textarea>\n                        </mat-form-field>\n                        <div class=\"right\">\n                            {{requiredFormNews.value.descriptionEn?.length}}/1024\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"requiredFormNews.controls['descriptionEn'].invalid && requiredFormNews.controls['descriptionEn'].touched\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"requiredFormNews.controls['descriptionEn'].errors.required\">\n                            Description is required.\n                        </div>\n                        <div *ngIf=\"requiredFormNews.controls['description'].hasError('maxlength')\">\n                            Description cannot exceed 1024 characters.\n                        </div>\n                    </div>\n\n                </form>\n\n                <div class=\"right mt-2\">\n                    <button mat-raised-button class=\"btn btn-primary margin-left\" (click)=\"saveNews()\"\n                        [disabled]=\"requiredFormNews.invalid\"><mat-icon>save</mat-icon></button>\n                    <button mat-raised-button class=\"margin-left\" color=\"warn\" (click)=\"clear()\">\n                        <mat-icon>clear</mat-icon>\n                    </button>\n                </div>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"Research\">\n            <div class=\"row col-sm-12 mt-2\">\n\n                <h1 class=\"title mt-2\">{{ 'settings.research.title' | translate}}</h1>\n\n                <form [formGroup]=\"requiredFormResearch\" novalidate>\n\n                    <div>\n                        <input id=\"file\" type=\"file\" #fileInput multiple class=\"form-control\"\n                            (change)=\"onFileChange($event)\">\n                    </div>\n\n                    <div class=\"pad col-md-3 col-6 mb-4\" *ngFor='let url of images'>\n                        <div class=\"right\">\n                            <button mat-raised-button class=\"margin-left\" color=\"warn\"\n                                (click)=\"delete(url)\"><mat-icon>delete</mat-icon></button>\n                        </div>\n                        <img class=\"card-img-top lazyloaded\" [src]=\"url\" alt=\"Image Source\">\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field class=\"mt-4\" appearance=\"fill\">\n                            <mat-label>Title (IT)</mat-label>\n                            <input formControlName=\"titleIt\" matInput>\n                        </mat-form-field>\n                    </div>\n\n                    <div *ngIf=\"requiredFormResearch.controls['titleIt'].invalid && requiredFormResearch.controls['titleIt'].touched\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"requiredFormResearch.controls['titleIt'].errors.required\">\n                            Title is required.\n                        </div>\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Description (IT) </mat-label>\n                            <textarea formControlName=\"descriptionIt\" matInput></textarea>\n                        </mat-form-field>\n                        <div class=\"right\">\n                            {{requiredFormResearch.value.descriptionIt?.length}}/1024\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"requiredFormResearch.controls['descriptionIt'].invalid && requiredFormResearch.controls['descriptionIt'].touched\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"requiredFormResearch.controls['descriptionIt'].errors.required\">\n                            Description is required.\n                        </div>\n                        <div *ngIf=\"requiredFormResearch.controls['descriptionIt'].hasError('maxlength')\">\n                            Description cannot exceed 1024 characters.\n                        </div>\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field class=\"mt-4\" appearance=\"fill\">\n                            <mat-label>Title (EN)</mat-label>\n                            <input formControlName=\"titleEn\" matInput>\n                        </mat-form-field>\n                    </div>\n\n                    <div *ngIf=\"requiredFormResearch.controls['titleEn'].invalid && requiredFormResearch.controls['titleEn'].touched\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"requiredFormResearch.controls['titleEn'].errors.required\">\n                            Title is required.\n                        </div>\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Description (EN)</mat-label>\n                            <textarea formControlName=\"descriptionEn\" matInput></textarea>\n                        </mat-form-field>\n                        <div class=\"right\">\n                            {{requiredFormResearch.value.descriptionEn?.length}}/1024\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"requiredFormResearch.controls['descriptionEn'].invalid && requiredFormResearch.controls['descriptionEn'].touched\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"requiredFormResearch.controls['descriptionEn'].errors.required\">\n                            Description is required.\n                        </div>\n                        <div *ngIf=\"requiredFormResearch.controls['descriptionEn'].hasError('maxlength')\">\n                            Description cannot exceed 1024 characters.\n                        </div>\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Year</mat-label>\n                            <input formControlName=\"year\" matInput>\n                        </mat-form-field>\n                    </div>\n\n                    <div *ngIf=\"requiredFormResearch.controls['year'].invalid && requiredFormResearch.controls['year'].touched\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"requiredFormResearch.controls['year'].errors.required\">\n                            Year is required.\n                        </div>\n                    </div>\n\n                </form>\n\n                <div class=\"right mt-2\">\n                    <button mat-raised-button class=\"btn btn-primary margin-left\" (click)=\"saveResearch()\"\n                        [disabled]=\"requiredFormResearch.invalid\"><mat-icon>save</mat-icon></button>\n                    <button mat-raised-button class=\"margin-left\" color=\"warn\" (click)=\"clear()\">\n                        <mat-icon>clear</mat-icon>\n                    </button>\n                </div>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"People\">\n            <div class=\"row col-sm-12 mt-2\">\n\n                <h1 class=\"title mt-2\">{{ 'settings.people.title' | translate}}</h1>\n\n                <form [formGroup]=\"requiredFormPeople\" novalidate>\n\n                    <div>\n                        <input class=\"form-control\" type=\"file\" #fileInput name=\"File\" id=\"txtFileUpload\"\n                            (change)=\"uploadListener($event)\" accept=\"*\" />\n                    </div>\n\n                    <div class=\"pad col-md-3 col-6 mb-4\" *ngIf=\"imageSource\">\n                        <div class=\"right\">\n                            <button mat-raised-button class=\"margin-left\" color=\"warn\"\n                                (click)=\"delete()\"><mat-icon>delete</mat-icon></button>\n                        </div>\n                        <img class=\"card-img-top lazyloaded\" [src]=\"imageSource\" alt=\"Image Source\">\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field class=\"mt-4\" appearance=\"fill\">\n                            <mat-label>Name</mat-label>\n                            <input formControlName=\"name\" matInput>\n                        </mat-form-field>\n                    </div>\n\n                    <div *ngIf=\"requiredFormPeople.controls['name'].invalid && requiredFormPeople.controls['name'].touched\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"requiredFormPeople.controls['name'].errors.required\">\n                            Name is required.\n                        </div>\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Surname</mat-label>\n                            <input formControlName=\"surname\" matInput>\n                        </mat-form-field>\n                    </div>\n\n                    <div *ngIf=\"requiredFormPeople.controls['surname'].invalid && requiredFormPeople.controls['surname'].touched\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"requiredFormPeople.controls['surname'].errors.required\">\n                            Surname is required.\n                        </div>\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Email</mat-label>\n                            <input formControlName=\"email\" matInput>\n                        </mat-form-field>\n                    </div>\n\n                    <div *ngIf=\"requiredFormPeople.controls['email'].invalid && requiredFormPeople.controls['email'].touched\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"requiredFormPeople.controls['email'].errors.required\">\n                            Email is required.\n                        </div>\n                        <div *ngIf=\"requiredFormPeople.controls['email'].errors.email\">\n                            Email not valid.\n                        </div>\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Number</mat-label>\n                            <input formControlName=\"number\" matInput>\n                        </mat-form-field>\n                    </div>\n\n                    <div *ngIf=\"requiredFormPeople.controls['number'].invalid && requiredFormPeople.controls['number'].touched\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"requiredFormPeople.controls['number'].errors.required\">\n                            Number is required.\n                        </div>\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Additional info</mat-label>\n                            <input formControlName=\"additionalInfo\" matInput>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Role</mat-label>\n                            <mat-select formControlName=\"role\">\n                                <mat-option value=\"Full Professor\">Full Professor</mat-option>\n                                <mat-option value=\"Associate Professor\">Associate Professor</mat-option>\n                                <mat-option value=\"Assistant Professor\">Assistant Professor</mat-option>\n                                <mat-option value=\"Researcher\">Researcher</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n\n                    <div *ngIf=\"requiredFormPeople.controls['role'].invalid && requiredFormPeople.controls['role'].touched\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"requiredFormPeople.controls['role'].errors.required\">\n                            Role is required.\n                        </div>\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Group</mat-label>\n                            <mat-select formControlName=\"group\">\n                                <mat-option value=\"Chair\">Chair</mat-option>\n                                <mat-option value=\"Faculty\">Faculty</mat-option>\n                                <mat-option value=\"Scientific staff\">Scientific staff</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n\n                    <div *ngIf=\"requiredFormPeople.controls['group'].invalid && requiredFormPeople.controls['group'].touched\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"requiredFormPeople.controls['group'].errors.required\">\n                            Group is required.\n                        </div>\n                    </div>\n\n                </form>\n\n                <div class=\"right mt-2\">\n                    <button mat-raised-button class=\"btn btn-primary margin-left\" (click)=\"savePeople()\"\n                        [disabled]=\"requiredFormPeople.invalid\"><mat-icon>save</mat-icon></button>\n                    <button mat-raised-button class=\"margin-left\" color=\"warn\" (click)=\"clear()\">\n                        <mat-icon>clear</mat-icon>\n                    </button>\n                </div>\n            </div>\n        </mat-tab>\n\n        <mat-tab label=\"Thesis\">\n            <div class=\"row col-sm-12 mt-2\">\n\n                <h1 class=\"title mt-2\">{{ 'settings.thesis.title' | translate}}</h1>\n\n                <form [formGroup]=\"requiredFormThesis\" novalidate>\n\n                    <div>\n                        <input class=\"form-control\" type=\"file\" #fileInput name=\"File\" id=\"txtFileUpload\"\n                            (change)=\"uploadListener($event)\" accept=\"*\" />\n                    </div>\n\n                    <div class=\"pad col-md-3 col-6 mb-4\" *ngIf=\"imageSource\">\n                        <div class=\"right\">\n                            <button mat-raised-button class=\"margin-left\" color=\"warn\"\n                                (click)=\"delete()\"><mat-icon>delete</mat-icon></button>\n                        </div>\n                        <img class=\"card-img-top lazyloaded\" [src]=\"imageSource\" alt=\"Image Source\">\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field class=\"mt-4\" appearance=\"fill\">\n                            <mat-label>Title (IT)</mat-label>\n                            <input formControlName=\"titleIt\" matInput>\n                        </mat-form-field>\n                    </div>\n\n                    <div *ngIf=\"requiredFormThesis.controls['titleIt'].invalid && requiredFormThesis.controls['titleIt'].touched\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"requiredFormThesis.controls['titleIt'].errors.required\">\n                            Title is required.\n                        </div>\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Description (IT)</mat-label>\n                            <textarea formControlName=\"descriptionIt\" matInput></textarea>\n                        </mat-form-field>\n                        <div class=\"right\">\n                            {{requiredFormThesis.value.descriptionIt?.length}}/1024\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"requiredFormThesis.controls['descriptionIt'].invalid && requiredFormThesis.controls['descriptionIt'].touched\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"requiredFormThesis.controls['descriptionIt'].errors.required\">\n                            Description is required.\n                        </div>\n                        <div *ngIf=\"requiredFormThesis.controls['descriptionIt'].hasError('maxlength')\">\n                            Description cannot exceed 1024 characters.\n                        </div>\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field class=\"mt-4\" appearance=\"fill\">\n                            <mat-label>Title (EN)</mat-label>\n                            <input formControlName=\"titleEn\" matInput>\n                        </mat-form-field>\n                    </div>\n\n                    <div *ngIf=\"requiredFormThesis.controls['titleEn'].invalid && requiredFormThesis.controls['titleEn'].touched\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"requiredFormThesis.controls['titleEn'].errors.required\">\n                            Title is required.\n                        </div>\n                    </div>\n\n                    <div class=\"row form-group pad\">\n                        <mat-form-field appearance=\"fill\">\n                            <mat-label>Description (EN)</mat-label>\n                            <textarea formControlName=\"descriptionEn\" matInput></textarea>\n                        </mat-form-field>\n                        <div class=\"right\">\n                            {{requiredFormThesis.value.descriptionEn?.length}}/1024\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"requiredFormThesis.controls['descriptionEn'].invalid && requiredFormThesis.controls['descriptionEn'].touched\"\n                        class=\"alert alert-danger\">\n                        <div *ngIf=\"requiredFormThesis.controls['descriptionEn'].errors.required\">\n                            Description is required.\n                        </div>\n                        <div *ngIf=\"requiredFormThesis.controls['descriptionEn'].hasError('maxlength')\">\n                            Description cannot exceed 1024 characters.\n                        </div>\n                    </div>\n\n\n                </form>\n\n                <div class=\"right mt-2\">\n                    <button mat-raised-button class=\"btn btn-primary margin-left\" (click)=\"saveThesis()\"\n                        [disabled]=\"requiredFormThesis.invalid\"><mat-icon>save</mat-icon></button>\n                    <button mat-raised-button class=\"margin-left\" color=\"warn\" (click)=\"clear()\">\n                        <mat-icon>clear</mat-icon>\n                    </button>\n                </div>\n            </div>\n        </mat-tab>\n    </mat-tab-group>\n</div>","import { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { CardDisplay } from 'src/app/model/card_display';\nimport { News } from 'src/app/model/news';\nimport { GeneralService } from 'src/app/service/general.service';\n\n@Component({\n  selector: 'app-news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.css']\n})\nexport class NewsComponent implements OnInit {\n\n  cards: CardDisplay[] = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  dataSource: MatTableDataSource<any>;\n  obs: Observable<any>;\n  card: CardDisplay;\n  currentLanguage = ''\n\n  constructor(private translate: TranslateService, private changeDetectorRef: ChangeDetectorRef, private _sanitizer: DomSanitizer, public dialog: MatDialog, private generalService: GeneralService, private router: Router) {\n    this.currentLanguage = this.translate.currentLang ? this.translate.currentLang : this.translate.defaultLang\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.currentLanguage = event.lang;\n    });\n  }\n\n  @ViewChild('focus', { read: ElementRef }) tableInput: ElementRef;\n  scrollUp(): void {\n    setTimeout(() => window.scrollTo(0, 0));\n  }\n\n  open(card) {\n    this.router.navigate(['/news/' + card.id])\n  }\n\n  ngOnInit() {\n    this.changeDetectorRef.detectChanges();\n    this.findTop()\n  }\n\n  ngOnDestroy() {\n    if (this.dataSource) {\n      this.dataSource.disconnect();\n    }\n  }\n\n  findTop() {\n    this.generalService.topNews().subscribe((res: News) => {\n      if (res && res.langs) {\n        let languages = res.langs.filter(c => c.language == this.currentLanguage)[0]\n        this.card = new CardDisplay(res.idNews, languages.title, languages.description, res.file)\n        this.findAll(res)\n      }\n    })\n  }\n\n  findAll(news) {\n    this.cards = []\n    if (news) {\n      this.generalService.allNews().subscribe((res: News[]) => {\n        res.forEach(element => {\n          let languages = element.langs.filter(c => c.language == this.currentLanguage)[0]\n          let description = languages.description && languages.description.length > 400 ? languages.description.slice(0, 320) + '...read more...' : languages.description\n          let file = element.file != null ? this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + element.file) : null\n          let card = new CardDisplay(element.idNews, languages.title, description, file)\n          this.cards.push(card)\n        });\n        this.cards = this.cards.filter(c => c.id != news.idNews)\n        this.dataSource = new MatTableDataSource<any>(this.cards);\n        this.dataSource.paginator = this.paginator;\n        this.obs = this.dataSource.connect();\n      });\n    }\n  }\n\n}\n","<div class=\"container mt-2\">\n    <h1 class=\"title\">AIDA LAB <small> Artificial Intelligence and Data Analysis Laboratory </small></h1>\n</div>\n\n<app-top-news></app-top-news>\n\n<div class=\"container grid-container mt-2 c\">\n    <div class=\"col-sm-12 col-md-12 mt-5\" *ngFor=\"let card of obs | async\">\n        <mat-card class=\"aida-card cursor\">\n            <mat-card-header>\n                <mat-card-title>\n                </mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"dashboard-card-content\">\n                <div class=\"row\">\n                    <h1 class=\"title\"> {{card.title.toUpperCase()}} </h1>\n                    <div class=\"col-sm-4 center\">\n                        <img *ngIf=\"card.file\" class=\"img-thumbnail lazyloaded\" [src]=\"card.file\" alt=\"Image Source\">\n                        <img *ngIf=\"!card.file\" class=\"img-thumbnail lazyloaded\" src=\"assets/noimage.png\"\n                            alt=\"Image Source\">\n                    </div>\n                    <div class=\"col-sm-8 justify\">\n                        <p class=\"long-text\">\n                            {{card.description}}\n                        </p>\n                    </div>\n                </div>\n                <div class=\"col-sm-12 right\">\n                    <button class=\"btn btn-primary\" (click)=\"open(card)\">{{ 'settings.button.more' | translate\n                        }}</button>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n    <div class=\"container-fluid\" #focus>\n        <mat-paginator *ngIf=\"cards.length && cards.length > 5\" [pageSizeOptions]=\"[5, 10, 25, 100]\"\n            (page)=\"scrollUp()\"></mat-paginator>\n    </div>\n</div>\n\n<div class=\"container mt-2\" *ngIf=\"!cards.length\">\n    <div class=\"col-md-12 center\">\n        <h1 class=\"title\"></h1>\n    </div>\n</div>","import { ThesisLang } from \"./thesis_lang\";\n\nexport class Thesis {\n\n    idThesis: number;\n    file: string;\n    langs: ThesisLang[]\n\n    constructor(file, langs) {\n        this.file = file\n        this.langs = langs\n    }\n}","import { Component, OnInit, ViewChild, ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { GeneralService } from 'src/app/service/general.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Observable } from 'rxjs';\nimport { Research } from 'src/app/model/research';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport { CardDisplay } from 'src/app/model/card_display';\n\n@Component({\n  selector: 'app-research',\n  templateUrl: './research.component.html',\n  styleUrls: ['./research.component.css']\n})\nexport class ResearchComponent implements OnInit {\n\n  cards: CardDisplay[] = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  dataSource: MatTableDataSource<any>;\n  obs: Observable<any>;\n  card: CardDisplay;\n  currentLanguage = '';\n\n  constructor(private translate: TranslateService, private changeDetectorRef: ChangeDetectorRef, private _sanitizer: DomSanitizer, public dialog: MatDialog, private generalService: GeneralService, private router: Router) {\n    this.currentLanguage = this.translate.currentLang ? this.translate.currentLang : this.translate.defaultLang\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.currentLanguage = event.lang;\n    });\n  }\n\n  ngOnInit(): void {\n    this.changeDetectorRef.detectChanges();\n    this.findAll()\n  }\n\n  ngOnDestroy() {\n    if (this.dataSource) {\n      this.dataSource.disconnect();\n    }\n  }\n\n  @ViewChild('focus', { read: ElementRef }) tableInput: ElementRef;\n  scrollUp(): void {\n    setTimeout(() => window.scrollTo(0, 0));\n  }\n  open(card) {\n    this.router.navigate(['/research/' + card.id])\n  }\n\n  findAll() {\n    this.cards = []\n    this.generalService.allResearch().subscribe((res: any) => {\n      res.forEach(element => {\n        let languages = element.langs.filter(c => c.language == this.currentLanguage)[0]\n        let description = languages.description && languages.description.length > 400 ? languages.description.slice(0, 320) + '...read more...' : languages.description\n        let file = this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + element.files[0].file)\n        let card = new CardDisplay(element.idResearch, languages.title, description, file)\n        this.cards.push(card)\n      });\n      this.dataSource = new MatTableDataSource<any>(this.cards);\n      this.dataSource.paginator = this.paginator;\n      this.obs = this.dataSource.connect();\n    });\n  }\n\n\n}\n","<div class=\"container grid-container mt-5\">\n    <h1 class=\"title\">{{ 'research.title' | translate}}</h1>\n    <div class=\"col-sm-12 col-md-12 mt-5\" *ngFor=\"let card of obs | async\">\n        <mat-card class=\"aida-card cursor\">\n            <mat-card-header>\n                <mat-card-title>\n                </mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"dashboard-card-content\">\n                <div class=\"row\">\n                    <h1 class=\"title\"> {{card.title.toUpperCase()}} </h1>\n                    <div class=\"col-sm-8 justify\">\n                        <p class=\"long-text\">\n                            <span>{{card.description}}</span>\n                        </p>\n                    </div>\n                    <div class=\"col-sm-4 center\">\n                        <img *ngIf=\"card.file\" class=\"img-thumbnail lazyloaded\" [src]=\"card.file\" alt=\"Image Source\">\n                        <img *ngIf=\"!card.file\" class=\"img-thumbnail lazyloaded\" src=\"assets/noimage.png\"\n                            alt=\"Image Source\">\n                    </div>\n                </div>\n                <div class=\"col-sm-2\">\n                    <button class=\"btn btn-primary\" (click)=\"open(card)\">{{ 'settings.button.more' | translate\n                        }}</button>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n    <div class=\"container-fluid\" #focus>\n        <mat-paginator *ngIf=\"cards.length && cards.length > 5\" [pageSizeOptions]=\"[5, 10, 25, 100]\"\n            (page)=\"scrollUp()\"></mat-paginator>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GeneralService {\n\n    environment: string;\n\n    constructor(private httpClient: HttpClient) {\n        this.environment = environment.base_url\n    }\n\n    allPublication() {\n        return this.httpClient.get(this.environment + '/publication/findAll');\n    }\n\n    allThesis() {\n        return this.httpClient.get(this.environment + '/thesis/findAll');\n    }\n\n    allNews() {\n        return this.httpClient.get(this.environment + '/news/findAll');\n    }\n\n    topNews() {\n        return this.httpClient.get(this.environment + '/news/findTop');\n    }\n\n    getNews(id: string) {\n        return this.httpClient.get(this.environment + '/news/findById/' + id);\n    }\n\n    allPeople() {\n        return this.httpClient.get(this.environment + '/people/findAll');\n    }\n\n    getPeople(id: string) {\n        return this.httpClient.get(this.environment + '/people/findById/' + id);\n    }\n\n    getThesis(id: string) {\n        return this.httpClient.get(this.environment + '/thesis/findById/' + id);\n    }\n\n    allResearch() {\n        return this.httpClient.get(this.environment + '/research/findAll');\n    }\n\n    getResearch(id: string) {\n        return this.httpClient.get(this.environment + '/research/findById/' + id);\n    }\n\n    saveNews(body: any) {\n        return this.httpClient.post(this.environment + '/news/save', body);\n    }\n\n    editNews(id, body: any) {\n        return this.httpClient.put(this.environment + '/news/edit/' + id, body);\n    }\n\n    savePeople(body: any) {\n        return this.httpClient.post(this.environment + '/people/save', body);\n    }\n\n    editPeople(id, body: any) {\n        return this.httpClient.put(this.environment + '/people/edit/' + id, body);\n    }\n\n    saveResearch(body: any) {\n        return this.httpClient.post(this.environment + '/research/save', body);\n    }\n\n    editResearch(id, body: any) {\n        return this.httpClient.put(this.environment + '/research/edit/' + id, body);\n    }\n\n    deleteNews(id: number) {\n        return this.httpClient.delete(this.environment + '/news/delete/' + id);\n    }\n\n    saveThesis(body: any) {\n        return this.httpClient.post(this.environment + '/thesis/save', body);\n    }\n\n    editThesis(id, body: any) {\n        return this.httpClient.put(this.environment + '/thesis/edit/' + id, body);\n    }\n\n    deleteThesis(id: number) {\n        return this.httpClient.delete(this.environment + '/thesis/delete/' + id);\n    }\n\n    deletePeople(id: number) {\n        return this.httpClient.delete(this.environment + '/people/delete/' + id);\n    }\n\n    deleteResearch(id: number) {\n        return this.httpClient.delete(this.environment + '/research/delete/' + id);\n    }\n\n    login(body: any) {\n        return this.httpClient.post(this.environment + '/user/login', body);\n    }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport { CardDisplay } from 'src/app/model/card_display';\nimport { News } from 'src/app/model/news';\nimport { GeneralService } from 'src/app/service/general.service';\n\n@Component({\n  selector: 'app-top-news',\n  templateUrl: './top-news.component.html',\n  styleUrls: ['./top-news.component.css']\n})\nexport class TopNewsComponent implements OnInit {\n\n  card;\n  currentLanguage: any;\n\n  constructor(private translate: TranslateService, private generalService: GeneralService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.currentLanguage = this.translate.currentLang ? this.translate.currentLang : this.translate.defaultLang\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.currentLanguage = event.lang;\n    });\n    this.findTop()\n  }\n\n  open(card) {\n    this.router.navigate(['/news/' + card.id])\n  }\n\n  findTop() {\n    this.generalService.topNews().subscribe((res: News) => {\n      if (res && res.langs) {\n        let languages = res.langs.filter(c => c.language == this.currentLanguage)[0]\n        this.card = new CardDisplay(res.idNews, languages.title, languages.description, res.file)\n      }\n    })\n  }\n\n}\n","<div class=\"jumbotron block-home block-home-dense\">\n    <div class=\"container\">\n        <div class=\"row cursor\" *ngIf=\"card\" (click)=\"open(card)\">\n            <div class=\"col-md-6 justify\">\n                <h1 class=\"display-title\">{{card?.title.toUpperCase()}}</h1>\n                <p class=\"lead\">{{card?.description}}</p>\n            </div>\n            <div class=\"col-md-6\">\n                <img *ngIf=\"card?.file\" class=\"figure-img lazyloaded\" [src]=\"card.file\" alt=\"Image Source\">\n                <img *ngIf=\"!card?.file\" class=\"figure-img lazyloaded\" src=\"assets/noimage.png\" alt=\"Image Source\">\n            </div>\n        </div>\n        <div class=\"row\" *ngIf=\"!card\">\n            <div class=\"col-md-12 center\">\n                <h1 class=\"display-title\">{{ 'news.nonews' | translate}}</h1>\n            </div>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { MatDialogConfig, MatDialog } from '@angular/material/dialog';\nimport { ModalDialogComponent } from './component/basic/modal-dialog/modal-dialog.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [HttpClient]\n})\nexport class AppComponent implements OnInit {\n\n  ngOnInit(): void {\n  }\n\n  constructor(private translate: TranslateService, public dialog: MatDialog, public router: Router) {\n    this.translate.setDefaultLang('en')\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n  }\n\n  setLanguage(language: string) {\n    this.translate.use(language)\n    this.reloadCurrentRoute()\n    this.openDialog(language)\n  }\n\n  reloadCurrentRoute() {\n    this.router.navigateByUrl(this.router.url, { skipLocationChange: true }).then(() => {\n      this.router.navigate([this.router.url]);\n    });\n  }\n\n  openDialog(language: string) {\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.height = '220px'\n    dialogConfig.width = '600px'\n\n    let lang = language == 'it' ? 'Italiano' : 'English'\n\n    dialogConfig.data = {\n      title: this.translate.get(\"operation.success\"),\n      message: this.translate.get(\"operation.language\") + \": \" + lang,\n      class: 'success-class'\n    };\n\n    this.dialog.open(ModalDialogComponent, dialogConfig);\n\n  }\n}\n","<div>\n    <app-navbar (language)=\"setLanguage($event)\"></app-navbar>\n</div>\n\n<footer class=\"footer background\">\n    <div class=\"row col-sm-12\">\n        <div class=\"title text-center col-sm-6\">\n            © 2023 Copyright: AIDA LAB Artificial Intelligence and Data Analysis\n        </div>\n        <div class=\"title text-center col-sm-6\">\n            Versione 1.0.0\n        </div>\n    </div>\n</footer>\n\n<app-spinner></app-spinner>","export class ThesisLang {\n    idThesisLang: number;\n    title: string;\n    description: string;\n    language: string;\n\n    constructor(title, description, language) {\n        this.title = title\n        this.description = description\n        this.language = language\n    }\n}","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport { CardDisplay } from 'src/app/model/card_display';\n\n@Component({\n  selector: 'app-thesis-detail',\n  templateUrl: './thesis-detail.component.html',\n  styleUrls: ['./thesis-detail.component.css']\n})\nexport class ThesisDetailComponent implements OnInit {\n\n  thesis: CardDisplay;\n  file: SafeUrl;\n  currentLanguage;\n\n  constructor(private location: Location, private translate: TranslateService, private _sanitizer: DomSanitizer, private activatedRoute: ActivatedRoute) {\n    this.currentLanguage = this.translate.currentLang ? this.translate.currentLang : this.translate.defaultLang\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.currentLanguage = event.lang;\n    });\n  }\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe((response: any) => {\n      let languages = response.thesis.langs.filter(c => c.language == this.currentLanguage)[0]\n      this.file = response.thesis.file != null ? this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + response.thesis.file) : null\n      this.thesis = new CardDisplay(response.thesis.idThesis, languages.title, languages.description, response.thesis.file)\n    });\n  }\n\n  back() {\n    this.location.back()\n  }\n\n}\n","<div class=\"container grid-container mt-5\">\n    <button class=\"btn btn-primary mt-2 ml-1\" (click)=\"back()\"><mat-icon>arrow_circle_left</mat-icon>\n    </button>\n    <div class=\"row col-sm-12\">\n        <h1 class=\"title\">{{thesis?.title.toUpperCase()}}</h1>\n        <div class=\"col-md-3 col-6 mb-4\">\n            <img *ngIf=\"thesis.file\" class=\"card-img-top lazyloaded\" [src]=\"thesis.file\" alt=\"Image Source\">\n            <img *ngIf=\"!thesis.file\" class=\"card-img-top lazyloaded\" src=\"assets/noimage.png\" alt=\"Image Source\">\n        </div>\n        <div class=\"row col-sm-12 justify mt-3\">\n            <h2> {{ 'settings.description' | translate }}</h2>\n            <p>{{thesis?.description}}</p>\n        </div>\n    </div>\n</div>","<div class=\"container\">\n    <div class=\"d-flex justify-content-center\" style=\"margin-top:50px\">\n        <div class=\"user_card\">\n            <div class=\"d-flex justify-content-center\">\n                <div class=\"brand_logo_container\">\n                    <span>\n                        <img class=\"logo\" src=\"assets/logo_unicas.png\">\n                    </span>\n                </div>\n            </div>\n            <div class=\"d-flex justify-content-center form_container\">\n                <form>\n                    <div class=\"input-group mb-3\">\n                        <div class=\"input-group-append\">\n                            <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n                        </div>\n                        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control input_user\"\n                            placeholder=\"Username\">\n                    </div>\n                    <div class=\"input-group mb-2\">\n                        <div class=\"input-group-append\">\n                            <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n                        </div>\n                        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control input_user\"\n                            value=\"\" placeholder=\"Password\">\n                    </div>\n                    <div class=\"d-flex justify-content-center mt-3 login_container\">\n                        <button type=\"button\" name=\"button\" class=\"btn login_btn\" (click)=\"login()\">Login</button>\n                    </div>\n                    <div class=\"d-flex justify-content-center mt-3 login_container\">\n                        <span *ngIf=\"showError1\">Errore nelle credenziali inserite, riprovare</span>\n                        <span *ngIf=\"showError2\">Errore: credenziali assenti, riprovare</span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GeneralService } from 'src/app/service/general.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: string = \"\";\n  password: string = \"\";\n  showError1: boolean = false;\n  showError2: boolean = false;\n\n  constructor(private service: GeneralService, private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  login() {\n    let user = {\n      username: this.username,\n      password: this.password,\n    }\n    this.service.login(user).subscribe((res: any) => {\n      this.showError1 = false;\n      this.showError2 = false;\n      if (res) {\n        this.router.navigate(['private'], { state: { user: res } });\n      }\n    })\n  }\n\n\n}\n","<div class=\"container grid-container mt-5 mb-5\">\n    <h1 class=\"title\">{{ 'publication.title' | translate }}</h1>\n    <h2>\n        IRIS è la soluzione IT che facilita la raccolta e la gestione dei dati relativi alle attività e ai prodotti\n        della ricerca. Fornisce a ricercatori, amministratori e valutatori gli strumenti per monitorare i risultati\n        della ricerca, aumentarne la visibilità e allocare in modo efficace le risorse disponibili. Per ulteriori\n        informazione <a target=\"_blank\" href=\"https://iris.unicas.it/\">visitare</a>.\n    </h2>\n    <h2>RECENT PUBLICATIONS</h2>\n    <ul>\n        <li *ngFor=\"let card of cards\">\n            {{card.title}}\n        </li>\n    </ul>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { GeneralService } from 'src/app/service/general.service';\n\n\n@Component({\n  selector: 'app-publication',\n  templateUrl: './publication.component.html',\n  styleUrls: ['./publication.component.css']\n})\nexport class PublicationComponent implements OnInit {\n\n  cards: any[] = [];\n\n  imageSource;\n\n  constructor(private service: GeneralService) { }\n\n  ngOnInit(): void {\n    this.service.allPublication().subscribe((res: any) => {\n      res.forEach(element => {\n        this.cards.push(element)\n      })\n    })\n  }\n\n}\n","import { ResearchFiles } from \"./research_files\";\nimport { ResearchLang } from \"./research_lang\";\n\nexport class Research {\n    idResearch: number;\n    year: string;\n    langs: ResearchLang[]\n    files: ResearchFiles[];\n\n    constructor(year, langs, files) {\n        this.year = year\n        this.langs = langs\n        this.files = files\n    }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { NavbarComponent } from './component/basic/navbar/navbar.component';\nimport { FooterComponent } from './component/basic/footer/footer.component';\nimport { ModalDialogComponent } from './component/basic/modal-dialog/modal-dialog.component';\nimport { AboutComponent } from './component/advanced/about/about.component';\nimport { NewsComponent } from './component/advanced/news/news.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { GenericTableComponent } from './component/basic/generic-table/generic-table.component';\nimport { DashboardComponent } from './component/basic/dashboard/dashboard.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SpinnerComponent } from './component/basic/spinner/spinner.component';\nimport { LoadingInterceptor } from './service/interceptor/loading.interceptor';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { PublicationComponent } from './component/advanced/publication/publication.component';\nimport { ContactComponent } from './component/advanced/contact/contact.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ResearchComponent } from './component/advanced/research/research.component';\nimport { ResearchDetailComponent } from './component/advanced/research/research-detail/research-detail.component';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { PrivateSectionComponent } from './component/advanced/private-section/private-section.component';\n// import ngx-translate and the http loader\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClient } from '@angular/common/http';\nimport { MatInputModule } from '@angular/material/input';\nimport { InsertComponent } from './component/advanced/private-section/insert/insert.component';\nimport { LoginComponent } from './component/advanced/private-section/login/login.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { EditNewsComponent } from './component/advanced/private-section/edit-news/edit-news.component';\nimport { EditPeopleComponent } from './component/advanced/private-section/edit-people/edit-people.component';\nimport { EditResearchComponent } from './component/advanced/private-section/edit-research/edit-research.component';\nimport { NewsDetailComponent } from './component/advanced/news/news-detail/news-detail.component';\nimport { PeopleComponent } from './component/advanced/people/people.component';\nimport { PeopleDetailComponent } from './component/advanced/people/people-detail/people-detail.component';\nimport { TopNewsComponent } from './component/advanced/news/top-news/top-news.component';\nimport { ThesisComponent } from './component/advanced/thesis/thesis.component';\nimport { ThesisDetailComponent } from './component/advanced/thesis/thesis-detail/thesis-detail.component';\nimport { EditThesisComponent } from './component/advanced/private-section/edit-thesis/edit-thesis.component';\nimport { ConfirmDialogComponent } from './component/basic/confirm-dialog/confirm-dialog.component';\nimport { P101Component } from './component/advanced/p101/p101.component';\nimport { NgbCarouselModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    FooterComponent,\n    ModalDialogComponent,\n    AboutComponent,\n    NewsComponent,\n    DashboardComponent,\n    GenericTableComponent,\n    SpinnerComponent,\n    PublicationComponent,\n    ContactComponent,\n    ResearchComponent,\n    ResearchDetailComponent,\n    PrivateSectionComponent,\n    InsertComponent,\n    LoginComponent,\n    EditNewsComponent,\n    EditPeopleComponent,\n    EditResearchComponent,\n    NewsDetailComponent,\n    PeopleComponent,\n    PeopleDetailComponent,\n    TopNewsComponent,\n    ThesisComponent,\n    ThesisDetailComponent,\n    EditThesisComponent,\n    ConfirmDialogComponent,\n    P101Component\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatGridListModule,\n    MatMenuModule,\n    MatButtonModule,\n    LayoutModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatSidenavModule,\n    MatListModule,\n    MatNativeDateModule,\n    FormsModule,\n    MatDialogModule,\n    MatSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    MatFormFieldModule,\n    MatInputModule,\n    MatTabsModule,\n    NgbCarouselModule,\n    NgbModule],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true,\n    },\n    {\n      provide: LocationStrategy, useClass: HashLocationStrategy,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\nexport function HttpLoaderFactory(http: HttpClient): TranslateHttpLoader {\n  return new TranslateHttpLoader(http, \"assets/i18n/\", \".json\");\n}","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-modal-dialog',\n  templateUrl: './modal-dialog.component.html',\n  styleUrls: ['./modal-dialog.component.css']\n})\nexport class ModalDialogComponent implements OnInit {\n\n  message;\n  title;\n  icon;\n  class;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) data) {\n    this.title = data.title\n    this.message = data.message;\n    this.icon = data.icon;\n    this.class = data.class\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"modal-div\" [ngClass]=\"class\"></div>\n<h1 mat-dialog-title>{{title}}</h1>\n<div mat-dialog-content>\n    <div *ngIf=\"icon\">\n        <mat-icon>{{icon}}</mat-icon>\n    </div>\n    <div class=\"content\" *ngIf=\"message\"> {{message}}\n    </div>\n</div>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>Chiudi</button>\n</mat-dialog-actions>","export const environment = {\n  production: true,\n  base_url: '/aida'\n};\n","export class ResearchLang {\n    idResearchLang: number;\n    title: string;\n    description: string;\n    language: string;\n\n    constructor(title, description, language) {\n        this.title = title\n        this.description = description\n        this.language = language\n    }\n}","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport { CardDisplay } from 'src/app/model/card_display';\nimport { Research } from 'src/app/model/research';\n\n@Component({\n  selector: 'app-research-detail',\n  templateUrl: './research-detail.component.html',\n  styleUrls: ['./research-detail.component.css']\n})\nexport class ResearchDetailComponent implements OnInit {\n\n  research: CardDisplay;\n  file: SafeResourceUrl;\n  currentLanguage;\n  files: SafeResourceUrl[] = [];\n\n  constructor(private location: Location, private translate: TranslateService, private _sanitizer: DomSanitizer, private activatedRoute: ActivatedRoute) {\n    this.currentLanguage = this.translate.currentLang ? this.translate.currentLang : this.translate.defaultLang\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.currentLanguage = event.lang;\n    });\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe((response: any) => {\n      response.research.files.forEach(element => {\n        this.file = response.research.files != null ? this._sanitizer.bypassSecurityTrustResourceUrl('data:image/png;base64' + element.file) : null\n        this.files.push(this.file)\n      });\n      let languages = response.research.langs.filter(c => c.language == this.currentLanguage)[0]\n      this.research = new CardDisplay(response.research.idResearch, languages.title, languages.description, this.file)\n    });\n  }\n\n  back() {\n    this.location.back()\n  }\n\n}\n","<div class=\"container grid-container mt-5\">\n    <button class=\"btn btn-primary mt-2 ml-1\" (click)=\"back()\"><mat-icon>arrow_circle_left</mat-icon>\n    </button>\n    <div class=\"row col-sm-12\">\n        <h1 class=\"title\">{{research?.title.toUpperCase()}}</h1>\n        <div class=\"row col-sm-12\">\n            <ngb-carousel class=\"back\">\n                <ng-template ngbSlide *ngFor=\"let file of files\">\n                    <div class=\"pad col-md-12 mb-4 center height\">\n                        <img [src]=\"file\" class=\"img lazyloaded mt-5\" />\n                    </div>\n                </ng-template>\n            </ngb-carousel>\n        </div>\n        <div class=\"row col-sm-12 justify mt-3\">\n            <h2> {{ 'settings.description' | translate }}</h2>\n            <p>{{research?.description}}</p>\n        </div>\n    </div>\n</div>","import { Location } from '@angular/common';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalDialogComponent } from 'src/app/component/basic/modal-dialog/modal-dialog.component';\nimport { News } from 'src/app/model/news';\nimport { NewsLang } from 'src/app/model/news_lang';\nimport { GeneralService } from 'src/app/service/general.service';\n\n@Component({\n  selector: 'app-edit-news',\n  templateUrl: './edit-news.component.html',\n  styleUrls: ['./edit-news.component.css']\n})\nexport class EditNewsComponent implements OnInit {\n\n  imageSource;\n  state;\n  news;\n\n  requiredForm: FormGroup;\n\n  @ViewChild('fileInput')\n  fileInput: ElementRef;\n\n  constructor(private fb: FormBuilder, private _sanitizer: DomSanitizer, private activatedRoute: ActivatedRoute, private generalService: GeneralService, public dialog: MatDialog, public router: Router, private location: Location) {\n    this.myForm()\n  }\n\n  ngOnInit(): void {\n    this.state = this.location.getState();\n    if (!this.state.user) {\n      this.router.navigate(['/']);\n    }\n    this.activatedRoute.data.subscribe((response: any) => {\n      this.news = response.news\n      this.imageSource = this.news.file != null ? this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + this.news.file) : null\n      this.setValue()\n    });\n  }\n\n  myForm() {\n    this.requiredForm = this.fb.group({\n      titleIt: ['', Validators.required],\n      descriptionIt: ['', Validators.compose([Validators.required, Validators.maxLength(1024)])],\n      titleEn: ['', Validators.required],\n      descriptionEn: ['', Validators.compose([Validators.required, Validators.maxLength(1024)])],\n    });\n  }\n\n  setValue() {\n    let it = this.news.langs.filter(c => c.language == 'it')[0]\n    let en = this.news.langs.filter(c => c.language == 'en')[0]\n    if (it && en) {\n      this.requiredForm.patchValue({\n        titleIt: it.title, descriptionIt: it.description,\n        titleEn: en.title, descriptionEn: en.description,\n      })\n    }\n  }\n\n  delete() {\n    this.fileInput.nativeElement.value = ''\n    this.imageSource = null\n  }\n\n  async uploadListener($event: any) {\n    let files = $event.srcElement.files;\n    let img = await this.convertBase64(files[0])\n    this.imageSource = img\n  }\n\n  convertBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };\n\n  saveNews() {\n    this.generalService.editNews(this.news.idNews, this.getNews()).subscribe(res => {\n      this.openDialog()\n      this.router.navigate(['/private'], { state: { user: this.state } });\n    })\n  }\n\n  getNews() {\n    let langs: NewsLang[] = []\n    let it = new NewsLang(this.requiredForm.value.titleIt, this.requiredForm.value.descriptionIt, 'it')\n    let en = new NewsLang(this.requiredForm.value.titleEn, this.requiredForm.value.descriptionEn, 'en')\n    langs.push(it)\n    langs.push(en)\n    return new News(this.imageSource, langs)\n  }\n\n\n  openDialog() {\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.height = '220px'\n    dialogConfig.width = '600px'\n\n    dialogConfig.data = {\n      title: 'Operazione completata',\n      message: 'Salvataggio effettuato correttamente.',\n      class: 'success-class'\n    };\n\n    this.dialog.open(ModalDialogComponent, dialogConfig);\n\n  }\n\n  clear() {\n    this.fileInput.nativeElement.value = ''\n    this.imageSource = null;\n    this.requiredForm.reset()\n  }\n\n  back() {\n    this.router.navigate(['/private'], { state: { user: this.state } })\n  }\n\n}\n","<div class=\"container grid-container mt-5\">\n\n    <button class=\"btn btn-primary\" (click)=\"back()\"><mat-icon>arrow_circle_left</mat-icon>\n    </button>\n\n    <div class=\"row mt-2\">\n\n        <h1 class=\"title mt-2\">{{ 'settings.edit.title' | translate}}</h1>\n\n        <form [formGroup]=\"requiredForm\" novalidate>\n\n            <div>\n                <input class=\"form-control\" type=\"file\" #fileInput name=\"File\" id=\"txtFileUpload\"\n                    (change)=\"uploadListener($event)\" accept=\"*\" />\n            </div>\n\n            <div class=\"top col-md-3 col-6 mb-4\" *ngIf=\"imageSource\">\n                <div class=\"right\">\n                    <button mat-raised-button class=\"margin-left\" color=\"warn\"\n                        (click)=\"delete()\"><mat-icon>delete</mat-icon></button>\n                </div>\n                <img class=\"card-img-top lazyloaded\" [src]=\"imageSource\" alt=\"Image Source\">\n            </div>\n\n            <div class=\"row form-group pad\">\n                <mat-form-field class=\"mt-4\" appearance=\"fill\">\n                    <mat-label>Title (IT)</mat-label>\n                    <input formControlName=\"titleIt\" matInput>\n                </mat-form-field>\n            </div>\n\n            <div *ngIf=\"requiredForm.controls['titleIt'].invalid && requiredForm.controls['titleIt'].touched\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"requiredForm.controls['titleIt'].errors.required\">\n                    Title is required.\n                </div>\n            </div>\n\n            <div class=\"row form-group pad\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Description (IT)</mat-label>\n                    <textarea formControlName=\"descriptionIt\" matInput></textarea>\n                </mat-form-field>\n                <div class=\"right\">\n                    {{requiredForm.value.descriptionIt?.length}}/1024\n                </div>\n            </div>\n\n            <div *ngIf=\"requiredForm.controls['descriptionIt'].invalid && requiredForm.controls['descriptionIt'].touched\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"requiredForm.controls['descriptionIt'].errors.required\">\n                    Description is required.\n                </div>\n                <div *ngIf=\"requiredForm.controls['descriptionIt'].hasError('maxlength')\">\n                    Description cannot exceed 1024 characters.\n                </div>\n            </div>\n\n            <div class=\"row form-group pad\">\n                <mat-form-field class=\"mt-4\" appearance=\"fill\">\n                    <mat-label>Title (EN)</mat-label>\n                    <input formControlName=\"titleEn\" matInput>\n                </mat-form-field>\n            </div>\n\n            <div *ngIf=\"requiredForm.controls['titleEn'].invalid && requiredForm.controls['titleEn'].touched\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"requiredForm.controls['titleEn'].errors.required\">\n                    Title is required.\n                </div>\n            </div>\n\n            <div class=\"row form-group pad\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Description (EN)</mat-label>\n                    <textarea formControlName=\"descriptionEn\" matInput></textarea>\n                </mat-form-field>\n                <div class=\"right\">\n                    {{requiredForm.value.descriptionEn?.length}}/1024\n                </div>\n            </div>\n\n            <div *ngIf=\"requiredForm.controls['descriptionEn'].invalid && requiredForm.controls['descriptionEn'].touched\"\n                class=\"alert alert-danger\">\n                <div *ngIf=\"requiredForm.controls['descriptionEn'].errors.required\">\n                    Description is required.\n                </div>\n                <div *ngIf=\"requiredForm.controls['descriptionEn'].hasError('maxlength')\">\n                    Description cannot exceed 1024 characters.\n                </div>\n            </div>\n\n        </form>\n\n\n        <div class=\"right mt-2\">\n            <button mat-raised-button class=\"btn btn-primary margin-left\"\n                (click)=\"saveNews()\"><mat-icon>save</mat-icon></button>\n            <button mat-raised-button class=\"margin-left\" color=\"warn\" (click)=\"clear()\">\n                <mat-icon>clear</mat-icon></button>\n        </div>\n    </div>\n\n</div>","export class ResearchFiles {\n    idFile;\n    file: string;\n    constructor(file) {\n        this.file = file\n    }\n}","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ModalDialogComponent } from '../../basic/modal-dialog/modal-dialog.component';\nimport { GeneralService } from 'src/app/service/general.service';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Research } from 'src/app/model/research';\nimport { People } from 'src/app/model/people';\nimport { News } from 'src/app/model/news';\nimport { Thesis } from 'src/app/model/thesis';\nimport { ConfirmDialogComponent } from '../../basic/confirm-dialog/confirm-dialog.component';\nimport { CardDisplay } from 'src/app/model/card_display';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-private-section',\n  templateUrl: './private-section.component.html',\n  styleUrls: ['./private-section.component.css']\n})\nexport class PrivateSectionComponent implements OnInit {\n\n  state: any\n  result: string = '';\n  currentLanguage = '';\n\n  constructor(private translate: TranslateService, private _sanitizer: DomSanitizer, private location: Location, public router: Router, public dialog: MatDialog, private generalService: GeneralService) {\n    this.currentLanguage = this.translate.currentLang ? this.translate.currentLang : this.translate.defaultLang\n    this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.currentLanguage = event.lang;\n    });\n  }\n\n  ngOnInit(): void {\n    this.state = this.location.getState();\n    if (!this.state.user) {\n      this.router.navigate(['/']);\n    }\n    this.findAllPeople()\n    this.findAllNews()\n    this.findAllThesis()\n    this.findAllResearch()\n  }\n\n  news: CardDisplay[] = [];\n  research: CardDisplay[] = [];\n  people: CardDisplay[] = [];\n  thesis: CardDisplay[] = [];\n\n  findAllPeople() {\n    this.people = []\n    this.generalService.allPeople().subscribe((res: any) => {\n      res.forEach(element => {\n        element.file = this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + element.file)\n        this.people.push(element)\n      });\n    });\n  }\n\n  findAllThesis() {\n    this.thesis = []\n    this.generalService.allThesis().subscribe((res: Thesis[]) => {\n      res.forEach(element => {\n        let languages = element.langs.filter(c => c.language == this.currentLanguage)[0]\n        let description = languages.description && languages.description.length > 400 ? languages.description.slice(0, 320) + '...read more...' : languages.description\n        let file = element.file != null ? this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + element.file) : null\n        let card = new CardDisplay(element.idThesis, languages.title, description, file)\n        this.thesis.push(card)\n      });\n    });\n  }\n\n  findAllNews() {\n    this.news = []\n    this.generalService.allNews().subscribe((res: News[]) => {\n      res.forEach(element => {\n        let languages = element.langs.filter(c => c.language == this.currentLanguage)[0]\n        let description = languages.description && languages.description.length > 400 ? languages.description.slice(0, 320) + '...read more...' : languages.description\n        let file = element.file != null ? this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + element.file) : null\n        let card = new CardDisplay(element.idNews, languages.title, description, file)\n        this.news.push(card)\n      });\n    });\n  }\n\n  findAllResearch() {\n    this.research = []\n    this.generalService.allResearch().subscribe((res: Research[]) => {\n      res.forEach(element => {\n        let languages = element.langs.filter(c => c.language == this.currentLanguage)[0]\n        let description = languages.description && languages.description.length > 400 ? languages.description.slice(0, 320) + '...read more...' : languages.description\n        let file = element.files.length && element.files[0] != null ? this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + element.files[0].file) : null\n        let card = new CardDisplay(element.idResearch, languages.title, description, file)\n        this.research.push(card)\n      });\n    });\n  }\n\n  new() {\n    this.router.navigate(['/insert'], { state: { user: this.state } });\n  }\n\n  openNews(card) {\n    this.router.navigate(['/edit-news/' + card.id], { state: { user: this.state } })\n  }\n\n  removeNews(card) {\n    this.generalService.deleteNews(card.id).subscribe(res => {\n      this.openDialog()\n      this.findAllNews()\n    })\n  }\n\n  openResearch(card) {\n    this.router.navigate(['/edit-research/' + card.id], { state: { user: this.state } })\n  }\n\n  removeResearch(card) {\n    this.generalService.deleteResearch(card.id).subscribe(res => {\n      this.openDialog()\n      this.findAllResearch()\n    })\n  }\n\n  openPeople(card) {\n    this.router.navigate(['/edit-people/' + card.id], { state: { user: this.state } })\n  }\n\n  removePeople(card) {\n    this.generalService.deletePeople(card.id).subscribe(res => {\n      this.openDialog()\n      this.findAllPeople()\n    })\n  }\n\n  openThesis(card) {\n    this.router.navigate(['/edit-thesis/' + card.id], { state: { user: this.state } })\n  }\n\n  removeThesis(card) {\n    this.generalService.deleteThesis(card.id).subscribe(res => {\n      this.openDialog()\n      this.findAllThesis()\n    })\n  }\n\n  confirmDialog(card, selection): void {\n\n    const message = `Sei sicuro di voler rimuovere l'elemento?`;\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.height = '220px'\n    dialogConfig.width = '600px'\n    dialogConfig.panelClass = 'full-screen-modal'\n\n    dialogConfig.data = {\n      title: 'Warning',\n      message: message,\n    };\n\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, dialogConfig)\n\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      this.result = dialogResult;\n      if (this.result && selection == 'thesis') {\n        this.removeThesis(card)\n      }\n      else if (this.result && selection == 'news') {\n        this.removeNews(card)\n      }\n      else if (this.result && selection == 'research') {\n        this.removeResearch(card)\n      } else if (this.result && selection == 'people') {\n        this.removePeople(card)\n      }\n    });\n\n  }\n\n  openDialog() {\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.height = '220px'\n    dialogConfig.width = '600px'\n    dialogConfig.panelClass = 'full-screen-modal'\n\n    dialogConfig.data = {\n      title: 'Operazione completata',\n      message: 'Elemento rimosso con successo.',\n      class: 'success-class'\n    };\n\n    this.dialog.open(ModalDialogComponent, dialogConfig);\n\n  }\n\n}\n","<div class=\"container grid-container mt-5\">\n\n    <button class=\"btn btn-primary\" (click)=\"new()\">\n        <span>New <mat-icon>save</mat-icon></span>\n    </button>\n\n    <mat-tab-group>\n        <mat-tab label=\"News\">\n            <div class=\"container grid-container mt-2\">\n                <div class=\"col-sm-12 col-md-12 mt-5\" *ngFor=\"let card of news\">\n                    <mat-card class=\"dashboard-card cursor\">\n                        <mat-card-header>\n                            <mat-card-title>\n                            </mat-card-title>\n                        </mat-card-header>\n                        <mat-card-content class=\"dashboard-card-content\">\n                            <div class=\"row\">\n                                <h1 class=\"title\"> {{card.title}} </h1>\n                                <div class=\"col-sm-8 justify\">\n                                    <p class=\"long-text\">\n                                        {{card.description}}\n                                    </p>\n                                </div>\n                                <div class=\"col-sm-4 center\">\n                                    <img *ngIf=\"card.file\" class=\"img lazyloaded\" [src]=\"card.file\" alt=\"Image Source\">\n                                    <img *ngIf=\"!card.file\" class=\"img lazyloaded\" src=\"assets/noimage.png\"\n                                        alt=\"Image Source\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <button mat-raised-button class=\"margin-left btn btn-primary\"\n                                    (click)=\"openNews(card)\"><mat-icon>mode_edit</mat-icon></button>\n                                <button mat-raised-button class=\"margin-left\" color=\"warn\"\n                                    (click)=\"confirmDialog(card, 'news')\"><mat-icon>delete</mat-icon></button>\n                            </div>\n                        </mat-card-content>\n                    </mat-card>\n                </div>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"People\">\n            <div class=\"container grid-container mt-2\">\n                <div class=\"col-sm-12 col-md-12 mt-5\" *ngFor=\"let card of people\">\n                    <mat-card class=\"aida-card cursor\">\n                        <mat-card-header>\n                            <mat-card-title>\n                            </mat-card-title>\n                        </mat-card-header>\n                        <mat-card-content class=\"dashboard-card-content\">\n                            <div class=\"row\">\n                                <h1 class=\"title\"> {{card.name}} {{card.surname}} </h1>\n                                <div class=\"col-sm-8 justify\">\n                                    <p class=\"long-text\">\n                                        <span>{{card.role}}</span>\n                                    </p>\n                                </div>\n                                <div class=\"col-sm-4 center\">\n                                    <img *ngIf=\"card.file\" class=\"img-thumbnail rounded-circle lazyloaded\"\n                                        [src]=\"card.file\" alt=\"Image Source\">\n                                    <img *ngIf=\"!card.file\" class=\"img-thumbnail rounded-circle lazyloaded\"\n                                        src=\"assets/noimage.png\" alt=\"Image Source\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <button mat-raised-button class=\"margin-left btn btn-primary\"\n                                    (click)=\"openPeople(card)\"><mat-icon>mode_edit</mat-icon></button>\n                                <button mat-raised-button class=\"margin-left\" color=\"warn\"\n                                    (click)=\"confirmDialog(card, 'people')\"><mat-icon>delete</mat-icon></button>\n                            </div>\n                        </mat-card-content>\n                    </mat-card>\n                </div>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"Research\">\n            <div class=\"container grid-container mt-2\">\n                <div class=\"col-sm-12 col-md-12 mt-5\" *ngFor=\"let card of research\">\n                    <mat-card class=\"aida-card cursor\">\n                        <mat-card-header>\n                            <mat-card-title>\n                            </mat-card-title>\n                        </mat-card-header>\n                        <mat-card-content class=\"dashboard-card-content\">\n                            <div class=\"row\">\n                                <h1 class=\"title\"> {{card.title}} </h1>\n                                <div class=\"col-sm-8 justify\">\n                                    <p class=\"long-text\">\n                                        <span>{{card.description}}</span>\n                                    </p>\n                                </div>\n                                <div class=\"col-sm-4 center\">\n                                    <img *ngIf=\"card.file\" class=\"img lazyloaded\" [src]=\"card.file\" alt=\"Image Source\">\n                                    <img *ngIf=\"!card.file\" class=\"img lazyloaded\" src=\"assets/noimage.png\"\n                                        alt=\"Image Source\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <button mat-raised-button class=\"margin-left btn btn-primary\"\n                                    (click)=\"openResearch(card)\"><mat-icon>mode_edit</mat-icon></button>\n                                <button mat-raised-button class=\"margin-left\" color=\"warn\"\n                                    (click)=\"confirmDialog(card, 'research')\"><mat-icon>delete</mat-icon></button>\n                            </div>\n                        </mat-card-content>\n                    </mat-card>\n                </div>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"Thesis\">\n            <div class=\"container grid-container mt-2\">\n                <div class=\"col-sm-12 col-md-12 mt-5\" *ngFor=\"let card of thesis\">\n                    <mat-card class=\"dashboard-card cursor\">\n                        <mat-card-header>\n                            <mat-card-title>\n                            </mat-card-title>\n                        </mat-card-header>\n                        <mat-card-content class=\"dashboard-card-content\">\n                            <div class=\"row\">\n                                <h1 class=\"title\"> {{card.title}} </h1>\n                                <div class=\"col-md-9 col-6 \">\n                                    <p class=\"long-text\">\n                                        {{card.description}}\n                                    </p>\n                                </div>\n                                <div class=\"col-md-3 col-6 mb-4\">\n                                    <img *ngIf=\"card.file\" class=\"card-img-top lazyloaded\" [src]=\"card.file\"\n                                        alt=\"Image Source\">\n                                    <img *ngIf=\"!card.file\" class=\"card-img-top lazyloaded\" src=\"assets/noimage.png\"\n                                        alt=\"Image Source\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <button mat-raised-button class=\"margin-left btn btn-primary\"\n                                    (click)=\"openThesis(card)\"><mat-icon>mode_edit</mat-icon></button>\n                                <button mat-raised-button class=\"margin-left\" color=\"warn\"\n                                    (click)=\"confirmDialog(card, 'thesis')\"><mat-icon>delete</mat-icon></button>\n                            </div>\n                        </mat-card-content>\n                    </mat-card>\n                </div>\n            </div>\n        </mat-tab>\n    </mat-tab-group>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container grid-container mt-2\">\n    <div class=\"row col-sm-12\">\n        <img src=\"assets/background_aida.jpeg\">\n    </div>\n\n    <mat-card class=\"mt-3\">\n        <mat-card-header>\n            <mat-card-title-group>\n                <mat-card-title class=\"title\">AIDA LAB Artificial Intelligence and Data\n                    Analysis</mat-card-title>\n            </mat-card-title-group>\n        </mat-card-header>\n        <mat-card-content>\n            {{ 'dashboard.text' | translate }}\n        </mat-card-content>\n    </mat-card>\n\n    <mat-card class=\"mt-3\">\n        <mat-card-header>\n            <mat-card-title-group>\n                <mat-card-title class=\"title\">Mission</mat-card-title>\n            </mat-card-title-group>\n        </mat-card-header>\n        <mat-card-content>\n            The mission of the group is to develop intelligent systems for biomedical, IoT, and Cultural\n            Heritage areas. The\n            group has more than twenty years old experience in the field of machine learning and pattern recognition and\n            data analysis.\n        </mat-card-content>\n    </mat-card>\n\n    <mat-card class=\"mt-3\">\n        <mat-card-header>\n            <mat-card-title-group>\n                <mat-card-title class=\"title\">Research field </mat-card-title>\n            </mat-card-title-group>\n        </mat-card-header>\n        <mat-card-content>\n            Pattern Recognition and Machine Learning applied to biomedical systems, distributed sensors and IoT,\n            computer-aided diagnosis for Alzheimer and Breast Cancer.\n        </mat-card-content>\n    </mat-card>\n\n    <mat-card class=\"mt-3\">\n        <mat-card-header>\n            <mat-card-title-group>\n                <mat-card-title class=\"title\">Teaching area </mat-card-title>\n            </mat-card-title-group>\n        </mat-card-header>\n        <mat-card-content>\n            Pattern Recognition and Machine Learning applied to biomedical systems, distributed sensors and IoT,\n            computer-aided diagnosis for Alzheimer and Breast Cancer.\n        </mat-card-content>\n    </mat-card>\n\n    <mat-card class=\"mt-3\">\n        <mat-card-header>\n            <mat-card-title-group>\n                <mat-card-title class=\"title\">Address</mat-card-title>\n            </mat-card-title-group>\n        </mat-card-header>\n        <mat-card-content>University of Cassino and Southern Lazio (UNICAS) Dipartimento di Ingegneria Elettrica e\n            dell’Informazione\n            (DIEI) Via G.Di Biasio 43, 03043 Cassino (FR), Italy\n        </mat-card-content>\n    </mat-card>\n\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  title: string;\n  message: string;\n\n  constructor(public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // Update view with given values\n    this.title = data.title;\n    this.message = data.message;\n  }\n\n  ngOnInit() {\n  }\n\n  onConfirm(): void {\n    // Close the dialog, return true\n    this.dialogRef.close(true);\n  }\n\n  onDismiss(): void {\n    // Close the dialog, return false\n    this.dialogRef.close(false);\n  }\n\n}\n","<div class=\"modal-div warning-class\"></div>\n<h1 mat-dialog-title>{{title}}</h1>\n<div mat-dialog-content>\n    <div class=\"content\" *ngIf=\"message\"> {{message}}\n    </div>\n</div>\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button class=\"btn btn-primary\" (click)=\"onConfirm()\">Yes</button>\n    <button mat-button (click)=\"onDismiss()\">No</button>\n</div>","import { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { GeneralService } from 'src/app/service/general.service';\n\n@Injectable({ providedIn: 'root' })\nexport class NewsResolver implements Resolve<any>{\n\n    constructor(private service: GeneralService) { }\n\n    resolve(\n        route: ActivatedRouteSnapshot,\n    ) {\n        return this.service.getNews(route.paramMap.get('id') || \"\");\n    }\n}","import { NewsLang } from \"./news_lang\";\n\nexport class News {\n\n    idNews: number;\n    file: string;\n    langs: NewsLang[]\n\n    constructor(file, langs) {\n        this.file = file\n        this.langs = langs\n    }\n}","<div class=\"container grid-container mt-5\">\n    <div class=\"person-single-column center\">\n        <div class=\"person\">\n            <img *ngIf=\"people.file\" class=\"rounded-circle\" [src]=\"people.file\" alt=\"Image Source\">\n            <img *ngIf=\"!people.file\" class=\"rounded-circle\" src=\"assets/noimage.png\" alt=\"Image Source\">\n            <h1 class=\"title\">{{people?.name}} {{people?.surname}}</h1>\n            <h2 class=\"text-muted\">{{people?.role}}</h2>\n        </div>\n    </div>\n    <div class=\"person-single-column center\">\n        <div class=\"person-links mb-4\">\n            <div class=\"row\">\n                <div class=\"col\">\n                    <h3>{{people?.email}}</h3>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <h3>{{people?.number}}</h3>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <h3>{{people?.additionalInfo}}</h3>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { People } from 'src/app/model/people';\n\n@Component({\n  selector: 'app-people-detail',\n  templateUrl: './people-detail.component.html',\n  styleUrls: ['./people-detail.component.css']\n})\nexport class PeopleDetailComponent implements OnInit {\n\n  people: People;\n  file: any;\n\n  constructor(private _sanitizer: DomSanitizer, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe((response: any) => {\n      this.people = response.people\n      this.file = this.people.file != null ? this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + this.people.file) : null\n    });\n  }\n\n}\n","import { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { GeneralService } from 'src/app/service/general.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ThesisResolver implements Resolve<any>{\n\n    constructor(private service: GeneralService) { }\n\n    resolve(\n        route: ActivatedRouteSnapshot,\n    ) {\n        return this.service.getThesis(route.paramMap.get('id') || \"\");\n    }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AboutComponent } from './component/advanced/about/about.component';\nimport { ContactComponent } from './component/advanced/contact/contact.component';\nimport { PublicationComponent } from './component/advanced/publication/publication.component';\nimport { ResearchComponent } from './component/advanced/research/research.component';\nimport { ResearchDetailComponent } from './component/advanced/research/research-detail/research-detail.component';\nimport { PrivateSectionComponent } from './component/advanced/private-section/private-section.component';\nimport { ResearchResolver } from './model/resolver/research.resolver';\nimport { NewsResolver } from './model/resolver/news.resolver';\nimport { LoginComponent } from './component/advanced/private-section/login/login.component';\nimport { InsertComponent } from './component/advanced/private-section/insert/insert.component';\nimport { EditNewsComponent } from './component/advanced/private-section/edit-news/edit-news.component';\nimport { NewsDetailComponent } from './component/advanced/news/news-detail/news-detail.component';\nimport { EditResearchComponent } from './component/advanced/private-section/edit-research/edit-research.component';\nimport { PeopleResolver } from './model/resolver/people.resolver';\nimport { EditPeopleComponent } from './component/advanced/private-section/edit-people/edit-people.component';\nimport { NewsComponent } from './component/advanced/news/news.component';\nimport { PeopleDetailComponent } from './component/advanced/people/people-detail/people-detail.component';\nimport { PeopleComponent } from './component/advanced/people/people.component';\nimport { ThesisComponent } from './component/advanced/thesis/thesis.component';\nimport { ThesisDetailComponent } from './component/advanced/thesis/thesis-detail/thesis-detail.component';\nimport { ThesisResolver } from './model/resolver/thesis.resolver';\nimport { EditThesisComponent } from './component/advanced/private-section/edit-thesis/edit-thesis.component';\nimport { P101Component } from './component/advanced/p101/p101.component';\n\nconst routes: Routes = [\n  { path: '', component: NewsComponent },\n  { path: 'research', component: ResearchComponent },\n  {\n    path: 'research/:id',\n    component: ResearchDetailComponent,\n    resolve: { research: ResearchResolver }\n  },\n  { path: 'thesis', component: ThesisComponent },\n  {\n    path: 'thesis/:id',\n    component: ThesisDetailComponent,\n    resolve: { thesis: ThesisResolver }\n  },\n  {\n    path: 'news/:id',\n    component: NewsDetailComponent,\n    resolve: { news: NewsResolver }\n  },\n  {\n    path: 'people/:id',\n    component: PeopleDetailComponent,\n    resolve: { people: PeopleResolver }\n  },\n  { path: 'p101', component: P101Component },\n  { path: 'publication', component: PublicationComponent },\n  { path: 'people', component: PeopleComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'contact', component: ContactComponent },\n  {\n    path: 'login', component: LoginComponent\n  },\n  {\n    path: 'private', component: PrivateSectionComponent\n  },\n  {\n    path: 'insert', component: InsertComponent\n  },\n  {\n    path: 'edit-news/:id',\n    component: EditNewsComponent,\n    resolve: { news: NewsResolver }\n  },\n  {\n    path: 'edit-research/:id',\n    component: EditResearchComponent,\n    resolve: { research: ResearchResolver }\n  },\n  {\n    path: 'edit-people/:id',\n    component: EditPeopleComponent,\n    resolve: { people: PeopleResolver }\n  },\n  {\n    path: 'edit-thesis/:id',\n    component: EditThesisComponent,\n    resolve: { thesis: ThesisResolver }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"container grid-container mt-5 mb-2\">\n    <h1 class=\"title\">{{ 'people.title' | translate }}</h1>\n    <div class=\"row\">\n        <h1 class=\"subtitle\">Chair</h1>\n        <div class=\"col-xl-2 col-lg-2 col-md-4 col-sm-6 col-6 person\" *ngFor=\"let card of full\">\n            <img *ngIf=\"card.file\" class=\"img-thumbnail rounded-circle lazyloaded\" [src]=\"card.file\" alt=\"Image Source\">\n            <img *ngIf=\"!card.file\" class=\"img-thumbnail rounded-circle lazyloaded\" src=\"assets/noimage.png\"\n                alt=\"Image Source\">\n            <h3 class=\"person-name cursor\" (click)=\"open(card)\"> {{card.name}} {{card.surname}}</h3>\n            <h4 class=\" person-title\"><small>{{card.role}}</small></h4>\n        </div>\n    </div>\n    <div class=\"row\">\n        <h1 class=\"subtitle\">Faculty</h1>\n        <div class=\"col-xl-2 col-lg-2 col-md-4 col-sm-6 col-6 person\" *ngFor=\"let card of associate\">\n            <img *ngIf=\"card.file\" class=\"img-thumbnail rounded-circle lazyloaded\" [src]=\"card.file\" alt=\"Image Source\">\n            <img *ngIf=\"!card.file\" class=\"img-thumbnail rounded-circle lazyloaded\" src=\"assets/noimage.png\"\n                alt=\"Image Source\">\n            <h3 class=\"person-name cursor\" (click)=\"open(card)\"> {{card.name}} {{card.surname}}</h3>\n            <h4 class=\"person-title\"><small>{{card.role}}</small></h4>\n        </div>\n    </div>\n    <div class=\"row\">\n        <h1 class=\"subtitle\">Scientific staff</h1>\n        <div class=\"col-xl-2 col-lg-2 col-md-4 col-sm-6 col-6 person\" *ngFor=\"let card of researcher\">\n            <img *ngIf=\"card.file\" class=\"img-thumbnail rounded-circle lazyloaded\" [src]=\"card.file\" alt=\"Image Source\">\n            <img *ngIf=\"!card.file\" class=\"img-thumbnail rounded-circle lazyloaded\" src=\"assets/noimage.png\"\n                alt=\"Image Source\">\n            <h3 class=\"person-name cursor\" (click)=\"open(card)\"> {{card.name}} {{card.surname}}</h3>\n            <h4 class=\"person-title\"><small>{{card.role}}</small></h4>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { GeneralService } from 'src/app/service/general.service';\n\n@Component({\n  selector: 'app-people',\n  templateUrl: './people.component.html',\n  styleUrls: ['./people.component.css']\n})\nexport class PeopleComponent implements OnInit {\n\n\n  all = []\n  associate = [];\n  full = [];\n  researcher = [];\n\n  constructor(private router: Router, private _sanitizer: DomSanitizer, private generalService: GeneralService) { }\n\n  ngOnInit(): void {\n    this.findAll()\n  }\n\n  findAll() {\n    this.researcher = []\n    this.full = []\n    this.associate = []\n    this.all = []\n    this.generalService.allPeople().subscribe((res: any) => {\n      res.forEach(element => {\n        element.file = this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + element.file)\n        this.all.push(element)\n      });\n      this.researcher = this.all.filter(c => c.roleGroup == 'Scientific staff')\n      this.associate = this.all.filter(c => c.roleGroup == 'Faculty')\n      this.full = this.all.filter(c => c.roleGroup == 'Chair')\n    });\n  }\n\n  open(card) {\n    this.router.navigate(['/people/' + card.idPeople])\n  }\n\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface GenericTableItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: GenericTableItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the GenericTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class GenericTableDataSource extends DataSource<GenericTableItem> {\n  data: GenericTableItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator | undefined;\n  sort: MatSort | undefined;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<GenericTableItem[]> {\n    if (this.paginator && this.sort) {\n      // Combine everything that affects the rendered data into one update\n      // stream for the data-table to consume.\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\n        .pipe(map(() => {\n          return this.getPagedData(this.getSortedData([...this.data ]));\n        }));\n    } else {\n      throw Error('Please set the paginator and sort on the data source before connecting.');\n    }\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect(): void {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: GenericTableItem[]): GenericTableItem[] {\n    if (this.paginator) {\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n      return data.splice(startIndex, this.paginator.pageSize);\n    } else {\n      return data;\n    }\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: GenericTableItem[]): GenericTableItem[] {\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort?.direction === 'asc';\n      switch (this.sort?.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["./src/app/model/people.ts","./src/app/component/advanced/settings/settings.component.ts","./src/app/component/advanced/settings/settings.component.html","./src/app/component/advanced/contact/contact.component.ts","./src/app/component/advanced/contact/contact.component.html","./src/app/component/basic/generic-table/generic-table.component.ts","./src/app/component/basic/generic-table/generic-table.component.html","./src/app/component/basic/spinner/spinner.component.html","./src/app/component/basic/spinner/spinner.component.ts","./src/app/resolver/news.resolver.ts","./src/app/service/loader/loader.service.ts","./src/environments/environment.ts","./src/app/model/card_layout.ts","./src/app/component/basic/footer/footer.component.ts","./src/app/component/basic/footer/footer.component.html","./src/app/component/basic/dashboard/dashboard.component.ts","./src/app/component/basic/dashboard/dashboard.component.html","./src/app/service/interceptor/loading.interceptor.ts","./src/app/component/basic/dashboard/dashboard-detail/dashboard-detail.component.ts","./src/app/component/basic/dashboard/dashboard-detail/dashboard-detail.component.html","./src/app/component/basic/navbar/navbar.component.ts","./src/app/component/basic/navbar/navbar.component.html","./src/app/component/advanced/news/news.component.html","./src/app/component/advanced/news/news.component.ts","./src/app/component/advanced/research/research.component.ts","./src/app/component/advanced/research/research.component.html","./src/app/service/general.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/component/advanced/publication/publication.component.ts","./src/app/component/advanced/publication/publication.component.html","./src/app/model/research.ts","./src/app/app.module.ts","./src/app/component/basic/modal-dialog/modal-dialog.component.ts","./src/app/component/basic/modal-dialog/modal-dialog.component.html","./src/environments/environment.prod.ts","./src/app/component/advanced/research/research-detail/research-detail.component.ts","./src/app/component/advanced/research/research-detail/research-detail.component.html","./src/app/component/advanced/private-section/private-section.component.html","./src/app/component/advanced/private-section/private-section.component.ts","./src/app/resolver/research.resolver.ts","./src/app/component/advanced/about/about.component.ts","./src/app/component/advanced/about/about.component.html","./src/app/model/news.ts","./src/app/component/advanced/author/author.component.ts","./src/app/component/advanced/author/author.component.html","./src/app/app-routing.module.ts","./src/app/component/basic/generic-table/generic-table-datasource.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class People {\n    name: string;\n    surname: string;\n    role: string;\n    file: string;\n\n    constructor(name, surname, role, file) {\n        this.name = name\n        this.surname = surname\n        this.role = role\n        this.file = file\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { News } from 'src/app/model/news';\nimport { GeneralService } from 'src/app/service/general.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ModalDialogComponent } from '../../basic/modal-dialog/modal-dialog.component';\nimport { Router } from '@angular/router';\nimport { People } from 'src/app/model/people';\nimport { Research } from 'src/app/model/research';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  imageSource;\n  title;\n  description;\n  name;\n  surname;\n  year;\n  role;\n\n  selected;\n\n  showPeople: boolean = false;\n  showNews: boolean = false;\n  showResearch: boolean = false;\n\n\n  constructor(private generalService: GeneralService, public dialog: MatDialog, public router: Router, private location: Location) {\n    let loc: any = this.location.getState();\n    console.log(loc)\n    if (!loc.user) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  async uploadListener($event: any) {\n    let files = $event.srcElement.files;\n    let img = await this.convertBase64(files[0])\n    this.imageSource = img\n  }\n\n  convertBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };\n\n  selection() {\n    if (this.selected == 'news') {\n      this.showNews = true\n      this.showPeople = false\n      this.showResearch = false\n    }\n    else if (this.selected == 'research') {\n      this.showResearch = true\n      this.showNews = false\n      this.showPeople = false\n    }\n    else if (this.selected == 'people') {\n      this.showPeople = true\n      this.showNews = false\n      this.showResearch = false\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  saveNews() {\n    let obj: News = new News(this.title, this.description, this.imageSource)\n    this.generalService.saveNews(obj).subscribe(res => {\n      this.openDialog()\n      this.router.navigate(['/']);\n    })\n  }\n\n  saveResearch() {\n    let obj: Research = new Research(this.title, this.description, this.year, this.imageSource)\n    this.generalService.saveResearch(obj).subscribe(res => {\n      this.openDialog()\n      this.router.navigate(['/research']);\n    })\n  }\n\n  savePeople() {\n    let obj: People = new People(this.name, this.surname, this.role, this.imageSource)\n    this.generalService.savePeople(obj).subscribe(res => {\n      this.openDialog()\n      this.router.navigate(['/people']);\n    })\n  }\n\n\n  openDialog() {\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.height = '220px'\n    dialogConfig.width = '600px'\n\n    dialogConfig.data = {\n      title: 'Operazione completata',\n      message: 'Salvataggio effettuato correttamente.',\n      class: 'success-class'\n    };\n\n    this.dialog.open(ModalDialogComponent, dialogConfig);\n\n  }\n\n}\n","<div class=\"row mt-2\">\n\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Choose a resource to create</mat-label>\n        <mat-select [(value)]=\"selected\" (selectionChange)=\"selection()\">\n            <mat-option value=\"news\">News</mat-option>\n            <mat-option value=\"people\">People</mat-option>\n            <mat-option value=\"research\">Research</mat-option>\n        </mat-select>\n    </mat-form-field>\n\n</div>\n\n<div class=\"row mt-2\" *ngIf=\"showNews\">\n\n    <h1 class=\"mat-h1 mt-2\">Inserisci una nuova news</h1>\n\n    <div>\n        <input class=\"form-control\" type=\"file\" #csvReader name=\"File\" id=\"txtFileUpload\"\n            (change)=\"uploadListener($event)\" accept=\"*\" />\n    </div>\n\n    <div class=\"mat-h1 mt-5\" *ngIf=\"imageSource\">\n        <img class=\"img\" [src]=\"imageSource\" alt=\"Image Source\">\n    </div>\n\n    <table class=\"full-width mt-2 mb-2 margin-left\" cellspacing=\"0\">\n        <tr>\n            <td>\n                <input type=\"text\" class=\"form-control mt-2\" placeholder=\"Title\" [(ngModel)]=\"title\">\n            </td>\n        </tr>\n        <tr class=\"mt-2\">\n            <td>\n                <input type=\"text-area\" class=\"form-control mt-2\" placeholder=\"Description\" [(ngModel)]=\"description\">\n            </td>\n        </tr>\n    </table>\n    <button mat-raised-button class=\"margin-left\" color=\"primary\" (click)=\"saveNews()\">Inserisci</button>\n</div>\n\n<div class=\"row mt-2\" *ngIf=\"showResearch\">\n\n    <h1 class=\"mat-h1 mt-2\">Inserisci una nuova ricerca</h1>\n\n    <div>\n        <input class=\"form-control\" type=\"file\" #csvReader name=\"File\" id=\"txtFileUpload\"\n            (change)=\"uploadListener($event)\" accept=\"*\" />\n    </div>\n\n    <div class=\"mat-h1 mt-5\" *ngIf=\"imageSource\">\n        <img class=\"img\" [src]=\"imageSource\" alt=\"Image Source\">\n    </div>\n\n    <table class=\"full-width mt-2 mb-2 margin-left\" cellspacing=\"0\">\n        <tr>\n            <td>\n                <input type=\"text\" class=\"form-control mt-2\" placeholder=\"Title\" [(ngModel)]=\"title\">\n            </td>\n        </tr>\n        <tr class=\"mt-2\">\n            <td>\n                <input type=\"text-area\" class=\"form-control mt-2\" placeholder=\"Description\" [(ngModel)]=\"description\">\n            </td>\n        </tr>\n        <tr class=\"mt-2\">\n            <td>\n                <input type=\"text-area\" class=\"form-control mt-2\" placeholder=\"Year\" [(ngModel)]=\"year\">\n            </td>\n        </tr>\n    </table>\n    <button mat-raised-button class=\"margin-left\" color=\"primary\" (click)=\"saveResearch()\">Inserisci</button>\n</div>\n\n<div class=\"row mt-2\" *ngIf=\"showPeople;\">\n\n    <h1 class=\"mat-h1 mt-2\">Inserisci un nuovo membro del team di ricerca</h1>\n\n    <div>\n        <input class=\"form-control\" type=\"file\" #csvReader name=\"File\" id=\"txtFileUpload\"\n            (change)=\"uploadListener($event)\" accept=\"*\" />\n    </div>\n\n    <div class=\"mat-h1 mt-5\" *ngIf=\"imageSource\">\n        <img class=\"img\" [src]=\"imageSource\" alt=\"Image Source\">\n    </div>\n\n    <table class=\"full-width mt-2 mb-2 margin-left\" cellspacing=\"0\">\n        <tr>\n            <td>\n                <input type=\"text\" class=\"form-control mt-2\" placeholder=\"Name\" [(ngModel)]=\"name\">\n            </td>\n        </tr>\n        <tr class=\"mt-2\">\n            <td>\n                <input type=\"text-area\" class=\"form-control mt-2\" placeholder=\"Surname\" [(ngModel)]=\"surname\">\n            </td>\n        </tr>\n        <tr class=\"mt-2\">\n            <td>\n                <input type=\"text-area\" class=\"form-control mt-2\" placeholder=\"Role\" [(ngModel)]=\"role\">\n            </td>\n        </tr>\n    </table>\n    <button mat-raised-button class=\"margin-left\" color=\"primary\" (click)=\"savePeople()\">Inserisci</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"mt-5\">\n    <mat-card-header>\n        <mat-card-title-group>\n            <mat-card-title>Contact</mat-card-title>\n        </mat-card-title-group>\n    </mat-card-header>\n    <mat-card-content>\n        Department of Electrical and Information Engineering<br>\n        Via G. Di Biasio, 43 – Cassino (FR) Italy <br>\n        e-mail: m.molinara@unicas.it, tel: 0776 2994357\n    </mat-card-content>\n</mat-card>\n\n<mat-card class=\"mt-5\">\n    <mat-card-header>\n        <mat-card-title-group>\n            <mat-card-title>Maps</mat-card-title>\n        </mat-card-title-group>\n    </mat-card-header>\n    <mat-card-content class=\"center\">\n        <iframe\n            src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2989.4944542076855!2d13.823848691465518!3d41.47187893258964!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x133abc0c18d2c96b%3A0x3adc1c25aab0a594!2sUniversit%C3%A0%20degli%20studi%20di%20Cassino%20e%20del%20Lazio%20Meridionale%20-%20Rettorato!5e0!3m2!1sit!2sit!4v1675499210198!5m2!1sit!2sit\"\n            width=\"1000\" height=\"450\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\"\n            referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\n    </mat-card-content>\n</mat-card>","import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { GenericTableDataSource, GenericTableItem } from './generic-table-datasource';\n\n@Component({\n  selector: 'app-generic-table',\n  templateUrl: './generic-table.component.html',\n  styleUrls: ['./generic-table.component.css']\n})\nexport class GenericTableComponent implements AfterViewInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatTable) table!: MatTable<GenericTableItem>;\n  dataSource: GenericTableDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  constructor() {\n    this.dataSource = new GenericTableDataSource();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data?.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 20]\">\n  </mat-paginator>\n</div>\n","<div *ngIf=\"this.loader.getLoading()\" class=\"cssload-container\">\n    <div class=\"cssload-speeding-wheel\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LoaderService } from 'src/app/service/loader/loader.service';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor(public loader: LoaderService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { GeneralService } from '../service/general.service';\n\n@Injectable({ providedIn: 'root' })\nexport class NewsResolver implements Resolve<any>{\n\n    constructor(private service: GeneralService) { }\n\n    resolve(\n        route: ActivatedRouteSnapshot,\n    ) {\n        return this.service.getNews(route.paramMap.get('id') || \"\");\n    }\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  private loading: boolean = false;\n\n  constructor() { }\n\n  setLoading(loading: boolean) {\n    this.loading = loading;\n  }\n\n  getLoading(): boolean {\n    return this.loading;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  base_url: '/aida'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class CardLayout {\n    id: number;\n    title: string;\n    cols: string;\n    rows: string;\n    description: string;\n    file: string;\n\n    constructor(id, title, cols, rows, description, file) {\n        this.id = id\n        this.title = title\n        this.cols = cols\n        this.rows = rows\n        this.description = description\n        this.file = file\n    }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"primary\">\n    <p class=\"text-footer\">\n        Copyright ©-All rights are reserved\n    </p>\n</footer>","import { Component, ViewChild, ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { GeneralService } from 'src/app/service/general.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { CardLayout } from 'src/app/model/card_layout';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ModalDialogComponent } from '../modal-dialog/modal-dialog.component';\nimport { Router } from '@angular/router';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Observable } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n\n  cards: CardLayout[] = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  dataSource: MatTableDataSource<CardLayout>;\n  obs: Observable<any>;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef, private _sanitizer: DomSanitizer, public dialog: MatDialog, private generalService: GeneralService, private router: Router) { }\n\n  /*   remove(card) {\n      this.generalService.deletNews(card.id).subscribe(res => {\n        this.findAll()\n        this.openDialog()\n      })\n    } */\n\n  @ViewChild('focus', { read: ElementRef }) tableInput: ElementRef;\n  scrollUp(): void {\n    setTimeout(() => window.scrollTo(0, 0));\n  }\n\n  open(card) {\n    this.router.navigate(['/news/' + card.id])\n  }\n\n  ngOnInit() {\n    this.changeDetectorRef.detectChanges();\n    this.findAll()\n  }\n\n  ngOnDestroy() {\n    if (this.dataSource) {\n      this.dataSource.disconnect();\n    }\n  }\n\n  findAll() {\n    this.cards = []\n    this.generalService.allNews().subscribe((res: any) => {\n      res.forEach(element => {\n        element.file = element.file != null ? this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + element.file) : null\n        let card = new CardLayout(element.idNews, element.title, '2', '1', element.description, element.file)\n        this.cards.push(card)\n      });\n      this.dataSource = new MatTableDataSource<CardLayout>(this.cards);\n      this.dataSource.paginator = this.paginator;\n      this.obs = this.dataSource.connect();\n    });\n  }\n\n  openDialog() {\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n\n    dialogConfig.data = {\n      title: 'Operazione completata',\n      message: 'La risorsa è stata eliminata.'\n    };\n\n    this.dialog.open(ModalDialogComponent, dialogConfig);\n\n  }\n\n}\n","<div class=\"grid-container mt-2\">\n  <div class=\"col-md-12\">\n    <h1>AIDA LAB <small>Artificial Intelligence and Data Analysis</small></h1>\n    <p class=\"CinecaSiteIntroduction\">Welcome to the Home Page of the Artificial Intelligence and Data Analysis Group of\n      the DIEI, the University of Cassino and Southern Lazio, Cassino, Italy.\n    </p>\n  </div>\n\n  <div class=\"col-md-12 mt-3\">\n    <h1 class=\"mat-h1\">Ultime news</h1>\n    <mat-grid-list cols=\"2\" rowHeight=\"350px\">\n      <mat-grid-tile *ngFor=\"let card of obs | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\n        <mat-card class=\"dashboard-card\">\n          <mat-card-header>\n            <mat-card-title>\n              {{card.title}}\n              <button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\n                <mat-icon>more_vert</mat-icon>\n              </button>\n              <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button (click)=\"open(card)\" mat-menu-item>Detail</button>\n                <!-- <button (click)=\"remove(card)\" mat-menu-item>Remove</button> -->\n              </mat-menu>\n            </mat-card-title>\n          </mat-card-header>\n          <mat-card-content class=\"dashboard-card-content\">\n            <div class=\"row\">\n              <div class=\"col-sm-5\">\n                <img *ngIf=\"card.file\" class=\"img\" [src]=\"card.file\" alt=\"Image Source\">\n              </div>\n              <div class=\"col-sm-7\">\n                <p>\n                  {{card.description}}\n                </p>\n              </div>\n            </div>\n          </mat-card-content>\n        </mat-card>\n      </mat-grid-tile>\n    </mat-grid-list>\n    <div class=\"container-fluid\" #focus>\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" (page)=\"scrollUp()\"></mat-paginator>\n    </div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n  HttpHeaders\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, finalize } from 'rxjs/operators';\nimport { LoaderService } from '../loader/loader.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ModalDialogComponent } from 'src/app/component/basic/modal-dialog/modal-dialog.component';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  private totalRequests = 0;\n\n  constructor(\n    private loadingService: LoaderService, public dialog: MatDialog) { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.totalRequests++;\n    this.loadingService.setLoading(true);\n    const headers = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(\"user\" + ':' + \"admin\")\n    });\n    const clonedRequest = request.clone({ headers: headers });\n    return next.handle(clonedRequest)\n      .pipe(\n        finalize(() => {\n          this.totalRequests--;\n          if (this.totalRequests == 0) {\n            this.loadingService.setLoading(false);\n          }\n        }),\n        catchError((error: HttpErrorResponse) => {\n          let errorMsg = ''\n          if (error.status != 403) {\n            errorMsg = 'Errore durante l\\'\\operazione.';\n          } else {\n            errorMsg = 'Non sei autorizzato ad accedere alla sezione.'\n          }\n          const dialogConfig = new MatDialogConfig();\n          dialogConfig.disableClose = true;\n          dialogConfig.autoFocus = true;\n          dialogConfig.height = '220px'\n          dialogConfig.width = '600px'\n          dialogConfig.panelClass = 'full-screen-modal'\n          dialogConfig.data = {\n            title: 'Errore',\n            message: errorMsg,\n            class: 'error-class'\n          };\n          this.dialog.open(ModalDialogComponent, dialogConfig)\n          return throwError(errorMsg);\n        })\n      )\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { News } from 'src/app/model/news';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-dashboard-detail',\n  templateUrl: './dashboard-detail.component.html',\n  styleUrls: ['./dashboard-detail.component.css']\n})\nexport class DashboardDetailComponent implements OnInit {\n\n  news: News;\n  file: any;\n\n  constructor(private _sanitizer: DomSanitizer, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe((response: any) => {\n      console.log(response)\n      this.news = response.news\n      this.file = this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + this.news.file)\n    });\n  }\n\n}\n","<div class=\"grid-container mt-5\">\n    <div class=\"row col-sm-12\">\n        <h1>Titolo: {{news?.title}}</h1>\n        <div class=\"col-sm-6\">\n            <h3>Decrizione: {{news?.description}}</h3>\n        </div>\n        <div class=\"col-sm-6\">\n            <img class=\"img\" [src]=\"news.file\" alt=\"Image Source\">\n        </div>\n    </div>\n</div>","import { Component, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n\n  @ViewChild(MatSidenav)\n  sidenav!: MatSidenav;\n  isShow: boolean = false;\n\n  constructor(private observer: BreakpointObserver, private cdRef: ChangeDetectorRef) { }\n\n  ngOnInit(\n  ) {\n  }\n\n  ngAfterViewChecked() {\n    this.cdRef.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    this.observer.observe(['(max-width: 800px)']).subscribe((res) => {\n      if (res.matches) {\n        this.sidenav.mode = 'over';\n        this.sidenav.close();\n        this.isShow = false;\n      } else {\n        this.isShow = true\n      }\n    });\n  }\n}\n","<div style=\"height: 80vh;\">\n\n  <mat-toolbar class=\"background\">\n    <button mat-icon-button (click)=\"sidenav.toggle()\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <span>\n      <img class=\"img\" src=\"assets/logo_aida.png\">\n    </span>\n    <span class=\"small-text\">\n      <span>AIDA LAB</span> <br>\n      Artificial Intelligence and Data Analysis Laboratory\n    </span>\n    <span class=\"menu-spacer\"></span>\n    <div *ngIf=\"isShow\">\n      <span class=\"spacer\"></span>\n      <span class=\"cursor\" routerLink=\"/\">Home</span>\n      <span class=\"divider\"></span>\n      <span class=\"cursor\" routerLink=\"/people\">People</span>\n      <span class=\"divider\"></span>\n      <span class=\"cursor\" routerLink=\"/research\">Research</span>\n      <span class=\"divider\"></span>\n      <span class=\"cursor\" routerLink=\"/publication\">Publication</span>\n      <span class=\"divider\"></span>\n      <span class=\"cursor\" routerLink=\"/about\">About</span>\n      <span class=\"divider\"></span>\n      <span class=\"cursor\" routerLink=\"/contact\">Contact</span>\n      <span class=\"divider\"></span>\n      <span class=\"divider\"></span>\n      <span class=\"cursor\" routerLink=\"/login\">Login</span>\n    </div>\n  </mat-toolbar>\n\n  <mat-sidenav-container>\n    <mat-sidenav #sidenav=\"matSidenav\">\n      <mat-nav-list>\n        <a (click)=\"sidenav.toggle()\" class=\"small-text-href\" routerLink=\"\" mat-list-item>News</a>\n        <a (click)=\"sidenav.toggle()\" class=\"small-text-href\" routerLink=\"/people\" mat-list-item>People</a>\n        <a (click)=\"sidenav.toggle()\" class=\"small-text-href\" routerLink=\"/research\" mat-list-item>Research</a>\n        <a (click)=\"sidenav.toggle()\" class=\"small-text-href\" routerLink=\"/publication\" mat-list-item>Publication</a>\n        <a (click)=\"sidenav.toggle()\" class=\"small-text-href\" routerLink=\"/about\" mat-list-item>About</a>\n        <a (click)=\"sidenav.toggle()\" class=\"small-text-href\" routerLink=\"/contact\" mat-list-item>Contact</a>\n        <a (click)=\"sidenav.toggle()\" class=\"small-text-href\" routerLink=\"/login\" mat-list-item>Login</a>\n      </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content>\n      <div class=\"site-header iu-hide bg-secondary text-white\">\n        <div class=\"site-title\" id=\"headerText\">\n          AIDA\n        </div>\n      </div>\n      <div class=\"container\">\n        <router-outlet></router-outlet>\n      </div>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n\n</div>","<div class=\"grid-container mt-5\">\n    <h1 class=\"mat-h1\">Research</h1>\n    <mat-grid-list cols=\"2\" rowHeight=\"300px\">\n        <mat-grid-tile *ngFor=\"let card of cards\" [colspan]=\"2\" [rowspan]=\"1\">\n            <mat-card class=\"aida-card\">\n                <mat-card-header>\n                    <mat-card-title>\n                        {{card.title}}\n                    </mat-card-title>\n                </mat-card-header>\n                <mat-card-content class=\"dashboard-card-content\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-5\">\n                            <img class=\"img\" [src]=\"imageSource\" alt=\"Image Source\">\n                        </div>\n                        <div class=\"col-sm-7\">\n                            <p>\n                                {{card.description}}\n                            </p>\n                        </div>\n                    </div>\n                </mat-card-content>\n            </mat-card>\n        </mat-grid-tile>\n    </mat-grid-list>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.css']\n})\nexport class NewsComponent implements OnInit {\n\n  cards = [];\n\n  imageSource;\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","import { Component, OnInit, ViewChild, ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { GeneralService } from 'src/app/service/general.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ModalDialogComponent } from '../../basic/modal-dialog/modal-dialog.component';\nimport { Router } from '@angular/router';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CardLayout } from 'src/app/model/card_layout';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-research',\n  templateUrl: './research.component.html',\n  styleUrls: ['./research.component.css']\n})\nexport class ResearchComponent implements OnInit {\n\n  cards = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  dataSource: MatTableDataSource<CardLayout>;\n  obs: Observable<any>;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef, private _sanitizer: DomSanitizer, public dialog: MatDialog, private generalService: GeneralService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.changeDetectorRef.detectChanges();\n    this.findAll()\n  }\n\n  ngOnDestroy() {\n    if (this.dataSource) {\n      this.dataSource.disconnect();\n    }\n  }\n\n  /*   remove(card) {\n      this.generalService.deleteResearch(card.idResearch).subscribe(res => {\n        this.findAll()\n        this.openDialog()\n      })\n    } */\n\n  @ViewChild('focus', { read: ElementRef }) tableInput: ElementRef;\n  scrollUp(): void {\n    setTimeout(() => window.scrollTo(0, 0));\n  }\n\n  open(card) {\n    this.router.navigate(['/research/' + card.idResearch])\n  }\n\n  findAll() {\n    this.cards = []\n    this.generalService.allResearch().subscribe((res: any) => {\n      res.forEach(element => {\n        element.file = this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + element.file)\n        this.cards.push(element)\n      });\n      this.dataSource = new MatTableDataSource<CardLayout>(this.cards);\n      this.dataSource.paginator = this.paginator;\n      this.obs = this.dataSource.connect();\n    });\n  }\n\n  openDialog() {\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n\n    dialogConfig.data = {\n      title: 'Operazione completata',\n      message: 'La risorsa è stata eliminata.'\n    };\n\n    this.dialog.open(ModalDialogComponent, dialogConfig);\n\n  }\n\n}\n","<div class=\"grid-container mt-2\">\n    <h1 class=\"mat-h1\">Research</h1>\n    <mat-grid-list cols=\"2\" rowHeight=\"300px\">\n        <mat-grid-tile *ngFor=\"let card of obs | async\" [colspan]=\"2\" [rowspan]=\"1\">\n            <mat-card class=\"aida-card\">\n                <mat-card-header>\n                    <mat-card-title>\n                        {{card.title}}\n                        <button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\n                            <mat-icon>more_vert</mat-icon>\n                        </button>\n                        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                            <button (click)=\"open(card)\" mat-menu-item>Detail</button>\n                        </mat-menu>\n                    </mat-card-title>\n                </mat-card-header>\n                <mat-card-content class=\"dashboard-card-content\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-5\">\n                            <img class=\"img\" [src]=\"card.file\" alt=\"Image Source\">\n                        </div>\n                        <div class=\"col-sm-7\">\n                            <p>\n                                {{card.description}}\n                            </p>\n                        </div>\n                    </div>\n                </mat-card-content>\n            </mat-card>\n        </mat-grid-tile>\n    </mat-grid-list>\n    <div class=\"container-fluid\" #focus>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" (page)=\"scrollUp()\"></mat-paginator>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GeneralService {\n\n    environment: string;\n\n    constructor(private httpClient: HttpClient) {\n        this.environment = environment.base_url\n    }\n\n    allNews() {\n        return this.httpClient.get(this.environment + '/news/findAll');\n    }\n\n    getNews(id: string) {\n        return this.httpClient.get(this.environment + '/news/findById/' + id);\n    }\n\n    allPeople() {\n        return this.httpClient.get(this.environment + '/people/findAll');\n    }\n\n    allResearch() {\n        return this.httpClient.get(this.environment + '/research/findAll');\n    }\n\n    getResearch(id: string) {\n        return this.httpClient.get(this.environment + '/research/findById/' + id);\n    }\n\n    saveNews(body: any) {\n        return this.httpClient.post(this.environment + '/news/save', body);\n    }\n\n    savePeople(body: any) {\n        return this.httpClient.post(this.environment + '/people/save', body);\n    }\n\n    saveResearch(body: any) {\n        return this.httpClient.post(this.environment + '/research/save', body);\n    }\n\n    deletNews(id: number) {\n        return this.httpClient.delete(this.environment + '/news/delete/' + id);\n    }\n\n    deletePeople(id: number) {\n        return this.httpClient.delete(this.environment + '/people/delete/' + id);\n    }\n\n    deleteResearch(id: number) {\n        return this.httpClient.delete(this.environment + '/research/delete/' + id);\n    }\n\n    login(body: any) {\n        return this.httpClient.post(this.environment + '/user/login', body);\n    }\n\n}","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [HttpClient]\n})\nexport class AppComponent implements OnInit {\n\n  ngOnInit(): void {\n  }\n}\n","<div>\n    <app-navbar></app-navbar>\n</div>\n\n<app-spinner></app-spinner>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-publication',\n  templateUrl: './publication.component.html',\n  styleUrls: ['./publication.component.css']\n})\nexport class PublicationComponent implements OnInit {\n\n  cards = [];\n\n  imageSource;\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div class=\"grid-container mt-2\">\n    <h1 class=\"mat-h1\">Publications</h1>\n    <h3>\n        IRIS è la soluzione IT che facilita la raccolta e la gestione dei dati relativi alle attività e ai prodotti\n        della ricerca. Fornisce a ricercatori, amministratori e valutatori gli strumenti per monitorare i risultati\n        della ricerca, aumentarne la visibilità e allocare in modo efficace le risorse disponibili.\n    </h3>\n    <h3>For more info visit this <a target=\"_blank\" href=\"https://iris.unicas.it/\">site</a>.</h3>\n    <div class=\"grid-container center mt-5\">\n        <img class=\"img center\" src=\"assets/work_inprogress.png\">\n    </div>\n</div>","export class Research {\n    title: string;\n    description: string;\n    year: number;\n    file: string;\n\n    constructor(title, description, year, file) {\n        this.title = title\n        this.description = description\n        this.year = year\n        this.file = file\n    }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule, MatCard } from '@angular/material/card';\nimport { NavbarComponent } from './component/basic/navbar/navbar.component';\nimport { FooterComponent } from './component/basic/footer/footer.component';\nimport { ModalDialogComponent } from './component/basic/modal-dialog/modal-dialog.component';\nimport { AuthorComponent } from './component/advanced/author/author.component';\nimport { AboutComponent } from './component/advanced/about/about.component';\nimport { NewsComponent } from './component/advanced/news/news.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { GenericTableComponent } from './component/basic/generic-table/generic-table.component';\nimport { DashboardComponent } from './component/basic/dashboard/dashboard.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SettingsComponent } from './component/advanced/settings/settings.component';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { FormsModule } from '@angular/forms';\nimport { SpinnerComponent } from './component/basic/spinner/spinner.component';\nimport { LoadingInterceptor } from './service/interceptor/loading.interceptor';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { PublicationComponent } from './component/advanced/publication/publication.component';\nimport { ContactComponent } from './component/advanced/contact/contact.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ResearchComponent } from './component/advanced/research/research.component';\nimport { DashboardDetailComponent } from './component/basic/dashboard/dashboard-detail/dashboard-detail.component';\nimport { ResearchDetailComponent } from './component/advanced/research/research-detail/research-detail.component';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { PrivateSectionComponent } from './component/advanced/private-section/private-section.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    FooterComponent,\n    ModalDialogComponent,\n    AuthorComponent,\n    AboutComponent,\n    NewsComponent,\n    DashboardComponent,\n    GenericTableComponent,\n    SettingsComponent,\n    SpinnerComponent,\n    PublicationComponent,\n    ContactComponent,\n    ResearchComponent,\n    DashboardDetailComponent,\n    ResearchDetailComponent,\n    PrivateSectionComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatMenuModule,\n    MatButtonModule,\n    LayoutModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatSidenavModule,\n    MatListModule,\n    MatNativeDateModule,\n    FormsModule,\n    MatDialogModule,\n    MatSelectModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true,\n    },\n    {\n      provide: LocationStrategy, useClass: HashLocationStrategy,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-modal-dialog',\n  templateUrl: './modal-dialog.component.html',\n  styleUrls: ['./modal-dialog.component.css']\n})\nexport class ModalDialogComponent implements OnInit {\n\n  message;\n  title;\n  icon;\n  class;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) data) {\n    this.title = data.title\n    this.message = data.message;\n    this.icon = data.icon;\n    this.class = data.class\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"modal-div\" [ngClass]=\"class\"></div>\n<h1 mat-dialog-title>{{title}}</h1>\n<div mat-dialog-content>\n    <div *ngIf=\"icon\">\n        <mat-icon>{{icon}}</mat-icon>\n    </div>\n    <div class=\"content\" *ngIf=\"message\"> {{message}}\n    </div>\n</div>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>Chiudi</button>\n</mat-dialog-actions>","export const environment = {\n  production: true,\n  base_url: '/aida'\n};\n","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { Research } from 'src/app/model/research';\n\n@Component({\n  selector: 'app-research-detail',\n  templateUrl: './research-detail.component.html',\n  styleUrls: ['./research-detail.component.css']\n})\nexport class ResearchDetailComponent implements OnInit {\n\n  research: Research;\n  file: any;\n\n  constructor(private _sanitizer: DomSanitizer, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe((response: any) => {\n      this.research = response.research\n      this.file = this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + this.research.file)\n    });\n  }\n\n}\n","<div class=\"grid-container mt-5\">\n    <div class=\"row col-sm-12\">\n        <h1>Titolo: {{research?.title}}</h1>\n        <div class=\"col-sm-6\">\n            <h3>Decrizione: {{research?.description}}</h3>\n        </div>\n        <div class=\"col-sm-6\">\n            <img class=\"img\" [src]=\"research.file\" alt=\"Image Source\">\n        </div>\n    </div>\n</div>","<div class=\"container\">\n    <div class=\"d-flex justify-content-center\" style=\"margin-top:100px\">\n        <div class=\"user_card\">\n            <div class=\"d-flex justify-content-center\">\n                <div class=\"brand_logo_container\">\n                    <span>\n                        <img class=\"img\" src=\"assets/logo_aida.png\">\n                    </span>\n                </div>\n            </div>\n            <div class=\"d-flex justify-content-center form_container\">\n                <form>\n                    <div class=\"input-group mb-3\">\n                        <div class=\"input-group-append\">\n                            <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n                        </div>\n                        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control input_user\"\n                            placeholder=\"Username\">\n                    </div>\n                    <div class=\"input-group mb-2\">\n                        <div class=\"input-group-append\">\n                            <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n                        </div>\n                        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control input_pass\"\n                            value=\"\" placeholder=\"Password\">\n                    </div>\n                    <div class=\"d-flex justify-content-center mt-3 login_container\">\n                        <button type=\"button\" name=\"button\" class=\"btn login_btn\" (click)=\"login()\">Login</button>\n                    </div>\n                    <div class=\"d-flex justify-content-center mt-3 login_container\">\n                        <span *ngIf=\"showError1\">Errore nelle credenziali inserite, riprovare</span>\n                        <span *ngIf=\"showError2\">Errore: credenziali assenti, riprovare</span>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { GeneralService } from 'src/app/service/general.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-private-section',\n  templateUrl: './private-section.component.html',\n  styleUrls: ['./private-section.component.css']\n})\nexport class PrivateSectionComponent implements OnInit {\n\n\n  username: string = \"\";\n  password: string = \"\";\n  showError1: boolean = false;\n  showError2: boolean = false;\n\n  constructor(private route: ActivatedRoute,\n    private service: GeneralService, private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  login() {\n    let user = {\n      username: this.username,\n      password: this.password,\n    }\n    this.service.login(user).subscribe((res: any) => {\n      this.showError1 = false;\n      this.showError2 = false;\n      if (res) {\n        this.router.navigate(['private'], { state: { user: res } });\n      }\n    })\n  }\n\n}\n","import { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { GeneralService } from '../service/general.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ResearchResolver implements Resolve<any>{\n\n    constructor(private service: GeneralService) { }\n\n    resolve(\n        route: ActivatedRouteSnapshot,\n    ) {\n        return this.service.getResearch(route.paramMap.get('id') || \"\");\n    }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row col-sm-12\">\n    <img class=\"img\" src=\"assets/background_aida.jpeg\">\n</div>\n\n<mat-card class=\"mt-3\">\n    <mat-card-header>\n        <mat-card-title-group>\n            <mat-card-title>Mission</mat-card-title>\n        </mat-card-title-group>\n    </mat-card-header>\n    <mat-card-content>\n        The mission of the group is to develop intelligent systems for biomedical, IoT, and Cultural\n        Heritage areas. The\n        group has more than twenty years old experience in the field of machine learning and pattern recognition and\n        data analysis.\n    </mat-card-content>\n</mat-card>\n\n<mat-card class=\"mt-3\">\n    <mat-card-header>\n        <mat-card-title-group>\n            <mat-card-title>Research field </mat-card-title>\n        </mat-card-title-group>\n    </mat-card-header>\n    <mat-card-content>\n        Pattern Recognition and Machine Learning applied to biomedical systems, distributed sensors and IoT,\n        computer-aided diagnosis for Alzheimer and Breast Cancer.\n    </mat-card-content>\n</mat-card>\n\n<mat-card class=\"mt-3\">\n    <mat-card-header>\n        <mat-card-title-group>\n            <mat-card-title>Teaching area </mat-card-title>\n        </mat-card-title-group>\n    </mat-card-header>\n    <mat-card-content>\n        Pattern Recognition and Machine Learning applied to biomedical systems, distributed sensors and IoT,\n        computer-aided diagnosis for Alzheimer and Breast Cancer.\n    </mat-card-content>\n</mat-card>\n\n<mat-card class=\"mt-3\">\n    <mat-card-header>\n        <mat-card-title-group>\n            <mat-card-title>Address</mat-card-title>\n        </mat-card-title-group>\n    </mat-card-header>\n    <mat-card-content>University of Cassino and Southern Lazio (UNICAS) Dipartimento di Ingegneria Elettrica e\n        dell’Informazione\n        (DIEI) Via G.Di Biasio 43, 03043 Cassino (FR), Italy\n    </mat-card-content>\n</mat-card>","export class News {\n    title: string;\n    description: string;\n    file: string;\n\n    constructor(title, description, file) {\n        this.title = title\n        this.description = description\n        this.file = file\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { GeneralService } from 'src/app/service/general.service';\nimport { MatDialogConfig, MatDialog } from '@angular/material/dialog';\nimport { ModalDialogComponent } from '../../basic/modal-dialog/modal-dialog.component';\n\n@Component({\n  selector: 'app-author',\n  templateUrl: './author.component.html',\n  styleUrls: ['./author.component.css']\n})\nexport class AuthorComponent implements OnInit {\n\n  cards = [];\n\n  constructor(private _sanitizer: DomSanitizer, public dialog: MatDialog, private generalService: GeneralService) { }\n\n  ngOnInit(): void {\n    this.findAll()\n  }\n\n  /*   remove(card) {\n      this.generalService.deletePeople(card.idPeople).subscribe(res => {\n        this.findAll()\n        this.openDialog()\n      })\n    } */\n\n  findAll() {\n    this.cards = []\n    this.generalService.allPeople().subscribe((res: any) => {\n      res.forEach(element => {\n        element.file = this._sanitizer.bypassSecurityTrustUrl('data:image/png;base64' + element.file)\n        this.cards.push(element)\n      });\n    });\n  }\n\n  openDialog() {\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n\n    dialogConfig.data = {\n      title: 'Operazione completata',\n      message: 'La risorsa è stata eliminata.'\n    };\n\n    this.dialog.open(ModalDialogComponent, dialogConfig);\n\n  }\n\n}\n","<div class=\"grid-container mt-2\">\n    <h1 class=\"mat-h1\">People</h1>\n    <mat-grid-list cols=\"6\" rowHeight=\"300px\">\n        <mat-grid-tile *ngFor=\"let card of cards\" [colspan]=\"2\" [rowspan]=\"1\">\n            <mat-card class=\"dashboard-card\">\n                <mat-card-header>\n                    <mat-card-title>\n                        {{card.role}}\n                    </mat-card-title>\n                </mat-card-header>\n                <mat-card-content class=\"dashboard-card-content\">\n                    <div>\n                        <img class=\"img\" [src]=\"card.file\" alt=\"Image Source\">\n                    </div>\n                    {{card.name}}\n                    {{card.surname}}\n                </mat-card-content>\n            </mat-card>\n        </mat-grid-tile>\n    </mat-grid-list>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AboutComponent } from './component/advanced/about/about.component';\nimport { AuthorComponent } from './component/advanced/author/author.component';\nimport { ContactComponent } from './component/advanced/contact/contact.component';\nimport { PublicationComponent } from './component/advanced/publication/publication.component';\nimport { ResearchComponent } from './component/advanced/research/research.component';\nimport { SettingsComponent } from './component/advanced/settings/settings.component';\nimport { DashboardComponent } from './component/basic/dashboard/dashboard.component';\nimport { NewsResolver } from './resolver/news.resolver';\nimport { DashboardDetailComponent } from './component/basic/dashboard/dashboard-detail/dashboard-detail.component';\nimport { ResearchDetailComponent } from './component/advanced/research/research-detail/research-detail.component';\nimport { ResearchResolver } from './resolver/research.resolver';\nimport { PrivateSectionComponent } from './component/advanced/private-section/private-section.component';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent },\n  { path: 'research', component: ResearchComponent },\n  {\n    path: 'research/:id',\n    component: ResearchDetailComponent,\n    resolve: { research: ResearchResolver }\n  },\n  {\n    path: 'news/:id',\n    component: DashboardDetailComponent,\n    resolve: { news: NewsResolver }\n  },\n  { path: 'publication', component: PublicationComponent },\n  { path: 'people', component: AuthorComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'contact', component: ContactComponent },\n  {\n    path: 'login', component: PrivateSectionComponent\n  },\n  {\n    path: 'private', component: SettingsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface GenericTableItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: GenericTableItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the GenericTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class GenericTableDataSource extends DataSource<GenericTableItem> {\n  data: GenericTableItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator | undefined;\n  sort: MatSort | undefined;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<GenericTableItem[]> {\n    if (this.paginator && this.sort) {\n      // Combine everything that affects the rendered data into one update\n      // stream for the data-table to consume.\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\n        .pipe(map(() => {\n          return this.getPagedData(this.getSortedData([...this.data ]));\n        }));\n    } else {\n      throw Error('Please set the paginator and sort on the data source before connecting.');\n    }\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect(): void {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: GenericTableItem[]): GenericTableItem[] {\n    if (this.paginator) {\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n      return data.splice(startIndex, this.paginator.pageSize);\n    } else {\n      return data;\n    }\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: GenericTableItem[]): GenericTableItem[] {\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort?.direction === 'asc';\n      switch (this.sort?.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}